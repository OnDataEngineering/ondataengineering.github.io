<?xml version="1.0" encoding="UTF-8"?> <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"> <channel><title>OnDataEngineering</title><description>A collaborative site for independent, critical and technical thinking on the use cases, architectural patterns and technologies relating to the transformation and preparation of data for exploitation.</description><link>http://ondataengineering.net/</link><atom:link href="http://ondataengineering.net/feed.xml" rel="self" type="application/rss+xml" /> <item><title>The Plan For This Week - 10/10/2017</title><link>http://ondataengineering.net/blog/2017/10/10/the-plan-for-this-week/</link><pubDate>Tue, 10 Oct 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;First up, yes, we’re a day late on this post - apologies. Don’t get confused - it is Tuesday today and not Monday.&lt;/p&gt; &lt;p&gt;So I think we have one last technology category to see off before we move on from data storage and database technologies, and that’s analytical databases - those that specialise in large scanning analytical queries and that combine support for SQL with a range of other analytical capabilities.&lt;/p&gt; &lt;p&gt;This feels like another monster category, so don’t expect much content this week, and I have a feeling it’s going to be next week before we can wrap everything up.&lt;/p&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/blog/2017/10/10/the-plan-for-this-week/</guid> </item> <item><title>Thoughts on Hadoop Data Formats</title><link>http://ondataengineering.net/blog/2017/10/06/thoughts-on-hadoop-data-formats/</link><pubDate>Fri, 06 Oct 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;This week we looked at two file formats for Hadoop; &lt;a href=&quot;/technologies/apache-orc&quot;&gt;ORC&lt;/a&gt; and &lt;a href=&quot;/technologies/apache-carbondata&quot;&gt;CarbonData&lt;/a&gt; and a new in-memory data structure specification; &lt;a href=&quot;/technologies/apache-arrow&quot;&gt;Arrow&lt;/a&gt;. Earlier on this year we looked at data serialisation frameworks - &lt;a href=&quot;/technologies/apache-avro&quot;&gt;Avro&lt;/a&gt; and &lt;a href=&quot;/technologies/apache-parquet&quot;&gt;Parquet&lt;/a&gt;. File formats, data serialisation frameworks, specifications… Ahh, what a minefield! Today I’d like to try and make sense of it all by looking at the evolution of these various data formats to see how we got here. &lt;!--more--&gt;&lt;/p&gt; &lt;p&gt;Back in the old days, it wasn’t uncommon to process gzipped plain text delimited formatted data using MapReduce. However, if the data was supplied as lots of &lt;a href=&quot;https://blog.cloudera.com/blog/2009/02/the-small-files-problem&quot;&gt;small files&lt;/a&gt;, eventually, pressure would be put on HDFS because of a hard limit on the number of files it can physically track. At the same time if too few large files were supplied, MapReduce wouldn’t be able to efficiently carve up the data for parallel processing. SequenceFile was the first file format to address both of these issues by providing a container in which many small files could be put into a larger single file with synchronisation markers to permit efficient splitting of files to distribute the workload. The file format also allowed for different types of compressions to be used inside of the file to provide a finer level of compression control whilst still maintaining its splitability characteristics. And for a while, SequenceFile was fine if you were just using it to do large-scale distributed batch processing or building a self-contained system using Java, such a &lt;a href=&quot;/technologies/apache-hbase&quot;&gt;storage manager&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;As a file format, &lt;a href=&quot;/technologies/apache-avro&quot;&gt;Avro&lt;/a&gt; builds on top of the &lt;a href=&quot;http://avro.apache.org/docs/current/spec.html#Object+Container+Files&quot;&gt;container file format&lt;/a&gt; and synchronisation marker ideas but adds the ability to model relational and complex data. It achieves this through the concept of a schema that allows you to specify the structure, type and the meaning of your data, and when distributed together with your data, you’ll have self describing data that can be used as both a wire format for communication and a serialisation format for persistent data. But Avro’s creator - Doug Cutting didn’t just stop there, Avro had a much grander aspiration. Its design accommodated schema evolution which allowed your data to be long lived and reusable by other applications outside of the Hadoop and Java ecosystem.&lt;/p&gt; &lt;p&gt;So far, when it comes to serialising data for persistence, our file formats have been writing consecutive elements of a row next to each other on disk. Around 2010/2011, there were several research projects experimenting with column-oriented data layout designs on HDFS. The idea behind a columnar data structure was to lay out your data so that column values were adjacent to one another. For read queries that only process a small subset of columns but over a large number of rows at a time (the so called typical analytical workload), it was possible to read only the required column values off disk, thereby minimising disk I/O. Contrary to the more traditional row-oriented data layout for the same type of query, you were forced to read all the other columns off disk, keep the columns required by the query and discard the unused ones. Column data being uniform in type, also had the additional benefit of being highly compressible, allowing the same data to be stored on disk in a smaller form and further reducing I/O. This approach to optimise data placement was popularised by databases such as &lt;a href=&quot;https://www.monetdb.org&quot;&gt;MonetDB&lt;/a&gt; and &lt;a href=&quot;https://www.vertica.com&quot;&gt;HP Vertica&lt;/a&gt;. The tradeoff would be slower writes, but this proved a good optimisation for analytical workloads. The record columnar file format (RCFile) came out of one of these research projects and became widely adopted in the Hadoop ecosystem.&lt;/p&gt; &lt;p&gt;By 2013, there was gathering interest towards using Hadoop for interactive, data warehouse-style SQL queries, and combining Hive with RCFile for data storage was a popular choice. &lt;a href=&quot;/tech-vendors/hortonworks&quot;&gt;Hortonworks&lt;/a&gt; launched the &lt;a href=&quot;https://hortonworks.com/blog/100x-faster-hive&quot;&gt;Stinger initiative&lt;/a&gt; with the goal to dramatically speed up Hive and make it more enterprise-ready. Building on top of the columnar file format of RCFile, the team introduced Avro’s schema concept to allow the format to model complex nested structures which wasn’t previously supported by RCFile. Armed with this metadata, it was also possible to intelligently select an appropriate compression schema based on a column’s data type. The format also allowed additional metadata such as min and max indexes to be collected which could then be later used to intelligently skip irrelevant parts of the data without the need for large, complex, or manually maintained indexes. Other improvements introduced over Avro and RCFile was the ability to identify the boundaries on which files could be split with having to scan for synchronisation markers. This new file format was known as the &lt;a href=&quot;/technologies/apache-orc&quot;&gt;Optimized Record Columnar (ORC)&lt;/a&gt; File. The Avro team had also been experimenting with a columnar file format design called Trevni which was picked up by &lt;a href=&quot;/tech-vendors/cloudera&quot;&gt;Cloudera&lt;/a&gt; and Twitter to develop &lt;a href=&quot;/technologies/apache-parquet&quot;&gt;Parquet&lt;/a&gt;. On the other hand, ORC was spun out of Hive into a separate project but was initially kept closely integrated. Parquet was positioned as a more general-purpose columnar file format for use with any Hadoop framework, although essentially both projects shared the same fundamental ideas. Today, they both stand in their own right and are integrated with a number of different frameworks.&lt;/p&gt; &lt;p&gt;Up until now we’ve being looking at data formats that are primarily optimised for a single type of query analysis. This is not ideal if you want your data processing platform to support a wide spectrum of different types of query analysis. &lt;a href=&quot;/technologies/apache-carbondata&quot;&gt;CarbonData&lt;/a&gt; from Huawei aims to tackle the ‘one format to rule them all’ idea heads on. Building on the previous formats, CarbonData introduces multi-dimensional key indexes inspired from the likes of Mondrian (an early open source OLAP server) and Apache &lt;a href=&quot;/technologies/apache-kylin&quot;&gt;Kylin&lt;/a&gt; to support multi-dimensional OLAP style queries, inverted indexes for count distinct like operations, and the ability to group columns together to support detailed queries which fetch many columns out of a wide table.&lt;/p&gt; &lt;p&gt;Finally, we come to &lt;a href=&quot;/technologies/apache-arrow&quot;&gt;Apache Arrow&lt;/a&gt;. Unlike the previous data formats we’ve discussed, Arrow isn’t about serialising data to disk, but is an in-memory data format that focuses on CPU throughput for efficient processing and for data exchange between process/systems without serialisation and deserialisation. Similar to ORC and Parquet, data is structured in a columnar structure, so when it comes to analytical workloads, only the required data can be supplied to the CPU. This data placement strategy takes full advantage of the on-chip cache storage (which is 100x faster to access than main memory), pipelining, and SIMD (Single Instruction Multiple Data) instructions which work on multiple data values simultaneously in a single CPU clock cycle. As an in-memory data format, this concept wasn’t new and had already been implemented in both &lt;a href=&quot;/technologies/apache-drill&quot;&gt;Drill&lt;/a&gt; and &lt;a href=&quot;/technologies/apache-hive/hive-server&quot;&gt;Hive&lt;/a&gt;. What is special about Arrow is its goal to define a standard interchange format to allow sharing of data between processes without the overhead of moving or transforming the data. This is important when you want to put together a data processing platform that isn’t limited only to Hadoop.&lt;/p&gt; &lt;p&gt;In summary, we’ve seen that the original Hadoop data formats were designed to solve very specific use cases. As the drive to develop Hadoop into a more general purpose analytics platform and expand its use outside of the Java ecosystem, the data formats have rapidly evolved, with each new format building on top of the ideas of its predecessor. While the Hadoop ecosystem continues to evolve to cater for new use cases, I expect to see continued innovation in this space.&lt;/p&gt; &lt;p&gt;So I hope this little journey has helped you navigate your way through the complex and rapidly evolving collection of Hadoop data formats - on Monday I’ll hand you back over to Peter.&lt;/p&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/blog/2017/10/06/thoughts-on-hadoop-data-formats/</guid> </item> <item><title>Data Storage Formats</title><link>http://ondataengineering.net/tech-categories/data-storage-formats/</link><pubDate>Thu, 05 Oct 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;Libraries that support the storage of data on disk for data storage, real-time or batch analytics. Popularised by the use of distributed file systems in analytical platforms, common features include support for schema evolution (the ability to make changes to the schema but stil read all historical data), support for both row and columnar data layouts (supporting efficient batch processing and analytical workloads respectively), complex record formats including nested objects and arrays, indexing to support random data access, and support for efficient inserts, updates and deletes as well as ACID transactions.&lt;/p&gt; &lt;!-- Tech Category metadata --&gt; &lt;!-- Tech Vendor metadata --&gt; &lt;h2 id=&quot;further-information&quot;&gt;Further Information&lt;/h2&gt; &lt;p&gt;A good introduction from Silicon Valley Data Science to text, SequenceFile, Avro, Parquet and ORC, along with some benchmarks - &lt;a href=&quot;http://www.svds.com/dataformats/&quot;&gt;http://www.svds.com/dataformats/&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Comparison of JSON, Avro, ORC and Parquet, including benchmarks, from August 2016 - &lt;a href=&quot;https://www.slideshare.net/HadoopSummit/file-format-benchmark-avro-json-orc-parquet-65740483&quot;&gt;https://www.slideshare.net/HadoopSummit/file-format-benchmark-avro-json-orc-parquet-65740483&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Comparison of Parquet, Avro, HBase and Kudu, from January 2017 - &lt;a href=&quot;https://db-blog.web.cern.ch/blog/zbigniew-baranowski/2017-01-performance-comparison-different-file-formats-and-storage-engines&quot;&gt;https://db-blog.web.cern.ch/blog/zbigniew-baranowski/2017-01-performance-comparison-different-file-formats-and-storage-engines&lt;/a&gt;&lt;/p&gt; &lt;h2 id=&quot;text-based-formats&quot;&gt;Text Based Formats&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Plain Text&lt;/td&gt; &lt;td&gt;Often formatted as either delimited (e.g. comma separated values (CSV) or pipe separated values (PSV)) or fixed width fields&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;XML&lt;/td&gt; &lt;td&gt;Supports the use of external schema definitions, but format can be verbose and serialisation/deserialisation performance often poor&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;JSON (Javascript Object Notation)&lt;/td&gt; &lt;td&gt;More efficient and terse than XML, but still suffers poor serialisation/deserialise performance&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;row-based-formats&quot;&gt;Row Based Formats&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;SequenceFile&lt;/td&gt; &lt;td&gt;Part of the Hadoop project, a container of binary key/value pairs used to store multiple smaller files inside a single large file - &lt;a href=&quot;https://wiki.apache.org/hadoop/SequenceFile&quot;&gt;https://wiki.apache.org/hadoop/SequenceFile&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-avro/&quot;&gt;Avro&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Binary serialisation format supporting schema evolution and complex record types&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;column-based-formats&quot;&gt;Column Based Formats&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;RCFile&lt;/td&gt; &lt;td&gt;Early implementation of a columnar record format as part of the Apache Hive project - &lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/RCFile&quot;&gt;https://cwiki.apache.org/confluence/display/Hive/RCFile&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-orc/&quot;&gt;ORCFile&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Evolution of RCFile, spun out into it’s own Apache project&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-parquet/&quot;&gt;Parquet&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Columnar format spun out from the Avro Trevni format&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-carbondata/&quot;&gt;CarbonData&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Columnar format created by Huawei to address a number of perceived shortcomings in existing formats&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;map-based-formats&quot;&gt;Map Based Formats&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;MapFile, SetFile, ArrayFile, BloomMapFile&lt;/td&gt; &lt;td&gt;Part of the Hadoop project and built on SequenceFile, with MapFile being the original file format used by HBase - &lt;a href=&quot;http://blog.cloudera.com/blog/2011/01/hadoop-io-sequence-map-set-array-bloommap-files/&quot;&gt;http://blog.cloudera.com/blog/2011/01/hadoop-io-sequence-map-set-array-bloommap-files/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;TFile&lt;/td&gt; &lt;td&gt;Container of key-value pairs, part of the Hadoop project - &lt;a href=&quot;http://hadoop.apache.org/docs/r2.6.1/api/org/apache/hadoop/io/file/tfile/TFile.html&quot;&gt;http://hadoop.apache.org/docs/r2.6.1/api/org/apache/hadoop/io/file/tfile/TFile.html&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;HFile&lt;/td&gt; &lt;td&gt;HBase storage format based on TFile and the SSTable format from the Google BigTable paper - &lt;a href=&quot;http://hbase.apache.org/book.html#_hfile_format_2&quot;&gt;http://hbase.apache.org/book.html#_hfile_format_2&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;And of course, any &lt;a href=&quot;/tech-categories/object-stores/&quot;&gt;object store&lt;/a&gt;, NoSQL key value store or &lt;a href=&quot;/tech-categories/nosql-wide-column-stores/&quot;&gt;NoSQL wide column store&lt;/a&gt; can be used to store data by key.&lt;/p&gt; &lt;h2 id=&quot;data-storage-services&quot;&gt;Data Storage Services&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-kudu/&quot;&gt;Kudu&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Storage engine that supports efficient storage of data, insert/update/deletes and strong query performance&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;in-memory-formats&quot;&gt;In Memory Formats&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-arrow/&quot;&gt;Arrow&lt;/a&gt;&lt;/td&gt; &lt;td&gt;In memory columnar data format supporting high performance data exchange and fast analytical access&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/tech-categories/data-storage-formats/</guid> </item> <item><title>The Mid Week News - 04/10/2017</title><link>http://ondataengineering.net/blog/2017/10/04/the-mid-week-news/</link><pubDate>Wed, 04 Oct 2017 07:45:00 +0100</pubDate> <description> &lt;p&gt;Time for the news again, with all our updates on new technology releases and interesting things to read… &lt;!--more--&gt;&lt;/p&gt; &lt;p&gt;Technology updates (details are on the relevant technology pages):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;/technologies/apache-calcite/&quot;&gt;Apache Calcite&lt;/a&gt; is up to 1.14&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;/technologies/apache-nifi/&quot;&gt;Apache NiFi&lt;/a&gt; is up to 1.4&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;/technologies/elastic-cloud/&quot;&gt;Elastic Cloud&lt;/a&gt; is now generally available on GCP (after being in beta since April)&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;/technologies/cloudera-altus/&quot;&gt;Cloudera Altus&lt;/a&gt; now supports Azure&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;/technologies/elasticsearch/&quot;&gt;Elasticsearch&lt;/a&gt; 6.0 release candidate 1 (RC1) (not for production) is out&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Other technology news:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;From MapR, and these are always good for a read, a &lt;a href=&quot;https://mapr.com/blog/database-comparison-an-in-depth-look-at-mapr-db/&quot;&gt;post&lt;/a&gt; on why &lt;a href=&quot;/technologies/mapr-file-system/mapr-db/&quot;&gt;MapR-DB&lt;/a&gt; is better than Cassandra, HBase and others&lt;/li&gt; &lt;li&gt;And another face-off - this time a &lt;a href=&quot;https://brewing.codes/2017/09/25/flink-vs-spark/&quot;&gt;post&lt;/a&gt; on &lt;a href=&quot;/technologies/apache-flink/&quot;&gt;Flink&lt;/a&gt; vs &lt;a href=&quot;/technologies/apache-spark/&quot;&gt;Spark&lt;/a&gt;&lt;/li&gt; &lt;li&gt;It’s &lt;a href=&quot;https://www.confluent.io/blog/build-deploy-scalable-machine-learning-production-apache-kafka/&quot;&gt;another interesting Confluence post&lt;/a&gt; (YMMV), this time on machine learning with &lt;a href=&quot;/technologies/apache-kafka/&quot;&gt;Kafka&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;http://www.zdnet.com/article/strata-nyc-2017-to-hadoop-go-jump-in-a-data-lake/&quot;&gt;Thoughts from ZDNet&lt;/a&gt; on the recent Strata NY event&lt;/li&gt; &lt;li&gt;HDInsights now support &lt;a href=&quot;https://azure.microsoft.com/en-us/blog/general-availability-of-hdinsight-interactive-query-blazing-fast-data-warehouse-style-queries-on-hyper-scale-data-2/&quot;&gt;Interactive Query&lt;/a&gt;, aka Hive on LLAP as a service&lt;/li&gt; &lt;li&gt;There are a bunch of security vulnerability announcements this week &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-9792&quot;&gt;CVE-2017-9792&lt;/a&gt; - malicious user with “ALTER” permissions on an Impala table can access any other Kudu table data&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-9797&quot;&gt;CVE-2017-9797&lt;/a&gt; - unauthenticated client can enter multi-user authentication mode in Apache Geode&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-9794&quot;&gt;CVE-2017-9794&lt;/a&gt; - user with read privileges can use the gfsh command line utility to execute queries with Apache Geode&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/blog/2017/10/04/the-mid-week-news/</guid> </item> <item><title>Apache ORC</title><link>http://ondataengineering.net/technologies/apache-orc/</link><pubDate>Wed, 04 Oct 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;Self-describing, type-aware, columnar file format to enable efficient querying and storage of data on Hadoop. Provides built-in storage indexes, column statistics and bloom filters to allow execution engines to implement predicate and projection push-down, partition pruning and cost based optimisation for low latency reads. Uses multi-version concurrency control to support ACID transactions and allow Hive to implement bulk insert, update, delete and streaming ingest (micro batch) use cases. Implements type-aware encoding for efficient compression (run-length for integer and dictionary for string). Schema definition is stored along side the data and supports all primitive data types and complex nested data structures. Uses protocol buffers to store meta data. Comes with a Java library for reading and writing the file format and includes a MapReduce compatible API, a C++ library for reading the file format (donated by Vertica) and a set of Java and C++ tools for inspecting and benchmarking ORC files. Created by Hortonworks in January 2013 as part of the initiative to massively speed up Hive and improve the storage efficiency of data stored in Hadoop, split off from Apache Hive to become a separate top level Apache project in April 2015 with a 1.0 release in January 2016.&lt;/p&gt; &lt;!-- Tech Category metadata --&gt; &lt;h2&gt;Technology Information&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt;&lt;td&gt;Other Names&lt;/td&gt;&lt;td&gt;ORC&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Vendors&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;/tech-vendors/apache/&quot;&gt;The Apache Software Foundation&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Commercial Open Source&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Last Updated&lt;/td&gt;&lt;td&gt;October 2017 - v1.4.0&lt;/td&gt;&lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://orc.apache.org/&quot;&gt;https://orc.apache.org/&lt;/a&gt; - home page&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://git-wip-us.apache.org/repos/asf/orc.git/&quot;&gt;https://git-wip-us.apache.org/repos/asf/orc.git/&lt;/a&gt; - source code&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://orc.apache.org/docs/&quot;&gt;https://orc.apache.org/docs/&lt;/a&gt; - documentation&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://hortonworks.com/blog/100x-faster-hive/&quot;&gt;https://hortonworks.com/blog/100x-faster-hive/&lt;/a&gt; - initial announcement&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://hortonworks.com/blog/apache-orc-launches-as-a-top-level-project/&quot;&gt;https://hortonworks.com/blog/apache-orc-launches-as-a-top-level-project/&lt;/a&gt; - top level project announcement, including summary of technology that support it&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;news&quot;&gt;News&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://orc.apache.org/news/&quot;&gt;https://orc.apache.org/news/&lt;/a&gt; - news page&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://orc.apache.org/docs/releases.html&quot;&gt;https://orc.apache.org/docs/releases.html&lt;/a&gt; - details of releases&lt;/li&gt; &lt;/ul&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/technologies/apache-orc/</guid> </item> <item><title>Apache CarbonData</title><link>http://ondataengineering.net/technologies/apache-carbondata/</link><pubDate>Tue, 03 Oct 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;Unified storage solution for Hadoop based on an indexed columnar data format, focusing on providing efficient processing and querying capabilities for disparate data access patterns. Data is loaded in batch, encoded, indexed using multiple strategies, compressed and written to HDFS using a columnar file format. Provides a number of highly configurable indexes (multi-dimensional key, min/max index, and inverted index), global dictionary encoding and column grouping to support interactive style OLAP queries, high throughput scan queries, low latency point queries and individual record queries. Also supports batch updates and deletes using delta bitmap files and compaction. Written in Java using Apache Thrift, supports all common primitive data types and complex nested data types including array and structures. Consists of several modules, the format specification and core implementation (columnar storage, indexing, compression, encoding), Hadoop input/output format interface, deep integration with Spark, interfacing to Spark SQL and the DataFrame API and connectors for Hive and Presto. Started back in 2013 at Huawei's India R&amp;D center, donated to the Apache Foundation in 2015, graduated in April 2017, with a stable (1.1.0) release in May 2017, and under active development.&lt;/p&gt; &lt;!-- Tech Category metadata --&gt; &lt;h2&gt;Technology Information&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt;&lt;td&gt;Other Names&lt;/td&gt;&lt;td&gt;CarbonData&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Vendors&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;/tech-vendors/apache/&quot;&gt;The Apache Software Foundation&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Commercial Open Source&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Last Updated&lt;/td&gt;&lt;td&gt;October 2017 - 1.2.0&lt;/td&gt;&lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;http://carbondata.apache.org&quot;&gt;http://carbondata.apache.org&lt;/a&gt; - CarbonData homepage&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;http://carbondata.apache.org/mainpage.html&quot;&gt;http://carbondata.apache.org/mainpage.html&lt;/a&gt; - CarbonData documentation&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;news&quot;&gt;News&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://blogs.apache.org/carbondata&quot;&gt;https://blogs.apache.org/carbondata&lt;/a&gt; - CarbonData blog&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/CARBONDATA/Releases&quot;&gt;https://cwiki.apache.org/confluence/display/CARBONDATA/Releases&lt;/a&gt; - details of releases&lt;/li&gt; &lt;/ul&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/technologies/apache-carbondata/</guid> </item> <item><title>Apache Arrow</title><link>http://ondataengineering.net/technologies/apache-arrow/</link><pubDate>Mon, 02 Oct 2017 07:45:00 +0100</pubDate> <description> &lt;p&gt;In-memory data structure specification for building columnar based data systems. Provides a standard interchange format to allow sharing of data between processes on a node without the overhead of moving or transforming the data, permits O(1) random access and has the ability to represent both flat relational structures and complex hierarchical nested data. Data is organised using a columnar structure memory-layout making it cache efficient for analytical workloads (which typically group all data relevant to a column operation together) and allows execution engines to take advantage of modern CPU SIMD (Single Instruction Multiple Data) instructions which work on multiple data values simultaneously in a single CPU clock cycle. Comes with reference implementations in Java and C++ and a Python interface to the C++ libraries (Ruby and JavaScript language bindings are in progress). Seeded from the Apache Drill project and promoted directly to a top level Apache project in February 2016 followed by an initial 0.1 release in October 2016. Used in a range of other projects including Drill, Spark, Impala, Kudu, Pandas and others. Has not yet reached a v1.0 milestone, but is still under active development with a range of contributors from a number of other Apache and non-Apache data projects.&lt;/p&gt; &lt;!-- Tech Category metadata --&gt; &lt;h2&gt;Technology Information&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt;&lt;td&gt;Other Names&lt;/td&gt;&lt;td&gt;Arrow&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Vendors&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;/tech-vendors/apache/&quot;&gt;The Apache Software Foundation&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Commercial Open Source&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Last Updated&lt;/td&gt;&lt;td&gt;October 2017 - v0.7&lt;/td&gt;&lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h1 id=&quot;links&quot;&gt;Links&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://arrow.apache.org/&quot;&gt;https://arrow.apache.org/&lt;/a&gt; - home page&lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;http://git.apache.org/arrow.git/&quot;&gt;http://git.apache.org/arrow.git/&lt;/a&gt; - source code&lt;/p&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;http://info.dataengconf.com/the-future-of-column-oriented-data-processing-with-arrow-and-parquet&quot;&gt;http://info.dataengconf.com/the-future-of-column-oriented-data-processing-with-arrow-and-parquet&lt;/a&gt; - introduction to Arrow&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://blogs.apache.org/foundation/entry/the_apache_software_foundation_announces87&quot;&gt;https://blogs.apache.org/foundation/entry/the_apache_software_foundation_announces87&lt;/a&gt; - top level project announcement&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;news&quot;&gt;News&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://arrow.apache.org/blog/&quot;&gt;https://arrow.apache.org/blog/&lt;/a&gt; - blog&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://arrow.apache.org/release/&quot;&gt;https://arrow.apache.org/release/&lt;/a&gt; - release and change summary&lt;/li&gt; &lt;/ul&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/technologies/apache-arrow/</guid> </item> <item><title>The Plan For This Week - 02/10/2017</title><link>http://ondataengineering.net/blog/2017/10/02/the-plan-for-this-week/</link><pubDate>Mon, 02 Oct 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;It’s a guest publication week this week - our old friend Jeff Moszuti has a bunch of technology summaries on record format libraries (specifically Apache Arrow, CarbonData and ORCFile), and some thoughts to share with us at the end of the week.&lt;/p&gt; &lt;p&gt;We’ll start today with Apache Arrow…&lt;/p&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/blog/2017/10/02/the-plan-for-this-week/</guid> </item> <item><title>Thoughts on Graph Technologies</title><link>http://ondataengineering.net/blog/2017/09/29/thoughts-on-graph-technologies/</link><pubDate>Fri, 29 Sep 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;So, I said four technology categories and three technology summaries this week. One day you’ll learn.&lt;/p&gt; &lt;p&gt;But let’s talk about what we did manage to achieve this week, specifically technology category pages on &lt;a href=&quot;/tech-categories/rdf-databases/&quot;&gt;RDF Databases&lt;/a&gt;, &lt;a href=&quot;/tech-categories/graph-databases/&quot;&gt;Graph Databases&lt;/a&gt; and &lt;a href=&quot;/tech-categories/graph-analytics/&quot;&gt;Graph Analytics&lt;/a&gt;… &lt;!--more--&gt;&lt;/p&gt; &lt;p&gt;So I’m not going to go over what a graph is, but suffice it to say that if you have data that’s modelled (or can be modelled) as a graph, then you might want to consider using some graph technologies.&lt;/p&gt; &lt;p&gt;However, given it’s still just data, the primary use cases are exactly the same as any other type of data. We want to manage and master the data in some sort of operational system (giving us fine grained ACID transactions at the entity/relationship level - the so-called OLTP use case), and we want to analytics over the data (large scans over lots of data to generates insight - the so-called OLAP use case).&lt;/p&gt; &lt;p&gt;And as per other operational databases, we need to be able to query the data as well as create/update it. For operational graph databases this focuses on graph traversals - essentially finding a set of nodes and relationships that match a pattern (all books by an author named John Smith) by finding an initial subset of nodes (the name John Smith), and then following relationships to match the pattern (named and then wrote), with maybe some aggregations at the end.&lt;/p&gt; &lt;p&gt;For the operational management of graph data there are two primary technology categories:&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;/tech-categories/rdf-databases/&quot;&gt;RDF Databases&lt;/a&gt; implement the W3C RDF data model standard that describes data as subject–predicate–object expressions (or triples), with support for ontologies that define the list of valid subject/object and predicate types. The benefit of RDF databases is their maturity (they’ve been around forever in technology terms, with a wide range of commercial and open source technologies), but also the standardisation driven by the W3C. There’s a W3C standard query language (SPARQL) that all RDF databases support, there are standard ontologies (OWL and RDFS), and there are a vast range of RDF creation, extraction, processing and visualisation tools that will work with your data. There’s a vast amount more here around RDF and the semantic web (that allows exploitation of text content as RDF data) that I’d love to come back to one day.&lt;/p&gt; &lt;p&gt;Then you have your &lt;a href=&quot;/tech-categories/graph-databases/&quot;&gt;Graph Databases&lt;/a&gt;. Again, these are operational databases, but they have a slightly more expressive data model that RDF databases by supporting both labels (or types, although RDF nodes are also typed) and properties (name/value pairs) against nodes and link, resulting in the term “labelled property graph”. That’s not to say you can’t do properties in RDF graphs (they’re just more relationships and nodes), however there are a number of RDF databases that explicitly support properties, as well as a number of graph databases that also support RDF/SPARQL. There’s no one standard query language for graph databases, however there are two popular options. The first is Cypher, the language used by Neo4j, which now has an open source specification (&lt;a href=&quot;http://www.opencypher.org/&quot;&gt;http://www.opencypher.org/&lt;/a&gt;) and has been adopted by a number of graph databases. The second is TinkerPop Gremlin (part of the Apache TinkerPop project), however rather than a language specification this is an entire abstraction layer that can be bolted on top of a graph database, with all the associated performance implications. Neo4j is the big cheese in the graph databases space, but it’s an active thriving technology area with a wide range of commercial and open source technologies to choose from.&lt;/p&gt; &lt;p&gt;However, before you piling into graph databases, have a look at &lt;a href=&quot;https://blog.acolyer.org/2017/07/07/do-we-need-specialized-graph-databases-benchmarking-real-time-social-networking-applications/&quot;&gt;The Morning Paper review of the “Do we need specialized graph databases? Benchmarking real-time social networking applications” paper from the University of Waterloo, Ontario from May 2017&lt;/a&gt;. Considering the technologies you already have before introducing a new one is never bad advice, and the paper looks at a number of graph use cases where relational databases actually perform better than dedicated graph databases. It also looks at the performance impact of using TinkerPop Gremlin over a native API, and the results aren’t good.&lt;/p&gt; &lt;p&gt;And so on to graph analytics. As per other types of data, there are options here for analytical databases (that focus on large scanning aggregation rather than transactional workloads) as well as analytical processing engines (batch engines that run over external data, for example MapReduce/Spark over HDFS for structured data).&lt;/p&gt; &lt;p&gt;Pragel feels like the originator here - Google’s technology that executed its PageRank algorithm. This implemented (and probably popularised) the BSP execution model (which can very crudely be describes as an equivalent of MapReduce for graph data). It’s another iterative model that can be distributed across a cluster, with each iteration generating “messages” between nodes that are used as the input for the next iteration.&lt;/p&gt; &lt;p&gt;Unlike batch analytics over structured data however, the use case for batch analytics over graph data is less clear. The specialist tools that have been created that implement the BSP modek (Giraph, Hama, GraphX) have never really taken off, and all are seeing limited active development. There are a number of analytical databases (Greenplum and Aster for starters) that support graph queries using a BSP execution model, but again this hasn’t seen widespread adoption in this space. And although TinkerPop now has a graph compute model, this is only supported by a limited number of databases.&lt;/p&gt; &lt;p&gt;It feels like time will tell in this space - there doesn’t appear to be clear use cases driving new technical capabilities at the moment, but maybe machine learning will change that.&lt;/p&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/blog/2017/09/29/thoughts-on-graph-technologies/</guid> </item> <item><title>Graph Analytics</title><link>http://ondataengineering.net/tech-categories/graph-analytics/</link><pubDate>Thu, 28 Sep 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;Technologies that support analytics over graph data, either as a processing platform over data stored elsewhere, or as an analytical database. Unlike graph databases which work on individual records or small portions of the graph, graph analytics technologies specialise in running analytics that run over the entire graph database to generate aggregated results, identify data of interest, or to enrich the graph. Processing is often bsaed on a BSP (Bulk Synchronous Processing) model made famous by Pregel, the model created by Google to run their PageRank algorithm.&lt;/p&gt; &lt;!-- Tech Category metadata --&gt; &lt;!-- Tech Vendor metadata --&gt; &lt;h2 id=&quot;pregel&quot;&gt;Pregel&lt;/h2&gt; &lt;p&gt;The Morning Paper blog from Adrian Colyer has a good &lt;a href=&quot;https://blog.acolyer.org/2015/05/26/pregel-a-system-for-large-scale-graph-processing/&quot;&gt;introduction to Pragel&lt;/a&gt;, and the original paper is also &lt;a href=&quot;http://www.dcs.bbk.ac.uk/~dell/teaching/cc/paper/sigmod10/p135-malewicz.pdf&quot;&gt;available online&lt;/a&gt;&lt;/p&gt; &lt;h2 id=&quot;analytics-engines&quot;&gt;Analytics Engines&lt;/h2&gt; &lt;p&gt;The following technologies all implement a graph analytics engine over external data, generally using a BSP execution model&lt;/p&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-giraph/&quot;&gt;Giraph&lt;/a&gt;&lt;/td&gt; &lt;td&gt;An iterative, highly scalable graph processing system based on Pregel and built over MapReduce&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-hama/&quot;&gt;Hama&lt;/a&gt;&lt;/td&gt; &lt;td&gt;A general purpose BSP (Bulk Synchronous Parallel) processing engine inspired by Pregel and DistBelief that runs over Mesos or YARN.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-spark/graphx/&quot;&gt;Spark/GraphX&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Spark library for processing graphs and running graph algorithms&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-flink/&quot;&gt;Flink&lt;/a&gt; Gelly&lt;/td&gt; &lt;td&gt;Graph processing API and library on top of Apache Flink&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Gaffer&lt;/td&gt; &lt;td&gt;Open source project for running analytics over very large graphs in HDFS, Accumulo or HBase - &lt;a href=&quot;https://github.com/gchq/Gaffer&quot;&gt;https://github.com/gchq/Gaffer&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;tinkerpop-enabled-analytical-graph-databases&quot;&gt;TinkerPop enabled Analytical Graph Databases&lt;/h2&gt; &lt;p&gt;Apache TinkerPop provides an API for running analytics over graphs - a VertexProgram is executed by a pluggable GraphComputer in a BSP fashion, with an optional final MapReduce step to post process the data into a single results set. See &lt;a href=&quot;http://tinkerpop.apache.org/docs/3.3.0/reference/#graphcomputer&quot;&gt;http://tinkerpop.apache.org/docs/3.3.0/reference/#graphcomputer&lt;/a&gt; for further information.&lt;/p&gt; &lt;p&gt;Out of the box GraphComputer implementations include support for Spark and Giraph, with the ability to run analytics over any graph database that supports the execution of analytics via the TinkerPop GraphComputer (these are listed as OLAP databases at &lt;a href=&quot;http://tinkerpop.apache.org/#graph-systems&quot;&gt;http://tinkerpop.apache.org/#graph-systems&lt;/a&gt;).&lt;/p&gt; &lt;p&gt;Databases that currently support graph analytics via TinkerPop include:&lt;/p&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;DataStax Enterprise&lt;/td&gt; &lt;td&gt;Commercial product built on Apache Cassandra with the addition of graph and search capabilities - &lt;a href=&quot;https://www.datastax.com/&quot;&gt;https://www.datastax.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;GRAKN.AI&lt;/td&gt; &lt;td&gt;Open Source graph database designed for AI use cases that also supports graph analytics - &lt;a href=&quot;https://grakn.ai&quot;&gt;https://grakn.ai&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;JanusGraph&lt;/td&gt; &lt;td&gt;Open source distributed graph database that runs over a number of storage backends (including Cassandra, HBase and BigTable), with TinkerPop support including support for graph analytics; previously known as Titan - &lt;a href=&quot;http://janusgraph.org/&quot;&gt;http://janusgraph.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Complexible Stardog&lt;/td&gt; &lt;td&gt;RDF database that also support property graphs and data virtualisation, with a community edition available - &lt;a href=&quot;http://www.stardog.com/&quot;&gt;http://www.stardog.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;TinkerGraph&lt;/td&gt; &lt;td&gt;In memory graph databases that’s part of TinkerPop as a reference implementation - &lt;a href=&quot;http://tinkerpop.apache.org&quot;&gt;http://tinkerpop.apache.org&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;other-analytical-graph-databases&quot;&gt;Other Analytical Graph Databases&lt;/h2&gt; &lt;p&gt;The following are analytical graph databases that provide their own APIs rather than leveraging Apache TinkerPop&lt;/p&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;TigerGraph&lt;/td&gt; &lt;td&gt;Commercial hybrid OLTP/OLAP graph database that claims order of magnitude performance and scalability improvements over it’s competitors; previously known as GraphSQL - &lt;a href=&quot;http://www.tigergraph.com&quot;&gt;http://www.tigergraph.com&lt;/a&gt;, &lt;a href=&quot;http://www.zdnet.com/article/tigergraph-a-graph-database-born-to-roar/&quot;&gt;http://www.zdnet.com/article/tigergraph-a-graph-database-born-to-roar/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Microsoft Graph Engine&lt;/td&gt; &lt;td&gt;Open source in memory graph computation engine, previously known as Trinity - &lt;a href=&quot;https://www.graphengine.io/&quot;&gt;https://www.graphengine.io/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;analytical-relational-databases&quot;&gt;Analytical Relational Databases&lt;/h2&gt; &lt;p&gt;A number of relational analytical databases also support graph analytics, including Teradata Aster (via SQL-GR which has a BSP execution model) and &lt;a href=&quot;/technologies/greenplum/&quot;&gt;Greenplum&lt;/a&gt; and &lt;a href=&quot;/technologies/apache-hawq/&quot;&gt;Apache HAWQ&lt;/a&gt; (via MADlib)&lt;/p&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/tech-categories/graph-analytics/</guid> </item> <item><title>The Mid Week News - 27/09/2017</title><link>http://ondataengineering.net/blog/2017/09/27/the-mid-week-news/</link><pubDate>Wed, 27 Sep 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;It’s news time again, and there are big announcements from Cloudera and Hortonworks this week… &lt;!--more--&gt;&lt;/p&gt; &lt;p&gt;Technology updates (details are on the relevant technology pages):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;/technologies/apache-solr/&quot;&gt;Apache Solr&lt;/a&gt; has hit 7.0&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;/technologies/alluxio/&quot;&gt;Alluxio&lt;/a&gt; is up to 1.6&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;/technologies/apache-ignite/&quot;&gt;Apache Ingite&lt;/a&gt; is up to 2.2&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;/technologies/apache-parquet/&quot;&gt;Apache Parquet&lt;/a&gt; C++ is up to 1.3&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Cloudera/Hortonworks technology news:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The big news this week is the simultaneous big product announcements from Hortonworks and Cloudera that look like they might be similar capabilities, but I think are probably trying to solve subtly different problems - we’ll revisit these in a few weeks once there’s more information available and do some technology summaries.&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://www.cloudera.com/products/sdx.html&quot;&gt;Cloudera SDX&lt;/a&gt; (Shared Data Experience, coming in CDH 5.13) appears to be trying to enable the “one” data platform experience that you get with an on premesis CDH cluster in the cloud, specifically a persistent shared storage layer with shared metadata, security and governance and a range of workloads on top. That looks different in the cloud - you probably don’t want persistent Cloudera cluster that you’re paying for by the hour even if you’re not using it - so SDX gives you a shared storage layer using cloud object storage, a shared metadata and management layer, and then the ability to run compute workloads in isolated transient workload clusters managed through Cloudera Altus. The original sales pitch of a single shared Hadoop data platform re-imagined for the cloud. More details via a &lt;a href=&quot;http://vision.cloudera.com/introducing-cloudera-sdx-a-shared-data-experience-for-the-hybrid-cloud/&quot;&gt;Cloudera VISION blog post&lt;/a&gt; and a &lt;a href=&quot;http://blog.cloudera.com/blog/2017/09/cloudera-sdx-under-the-hood/&quot;&gt;Cloudera Engineering blog post&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://hortonworks.com/products/data-management/dataplane-service/&quot;&gt;Hortonworks Data Plane&lt;/a&gt; is again all about shared metadata, security and data management, but this time across a range of different data platforms - Hadoop, relational databases and your EDW, either on-premesis or in the cloud, and for data in motion or at rest. It’s open source, extensible for adding new services, with data lifecycle management being first up, allowing you to replicate, backup &amp;amp; restore and tier your data across your data platforms. It’s another cloud service (because obviously), and they talk about it as a Global Data Management Platform. More details via a &lt;a href=&quot;https://hortonworks.com/blog/category-emerges-introducing-hortonworks-dataplane-service/&quot;&gt;Hortonworks blog post&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Other technology news:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;/technologies/mapr-file-system/mapr-db/&quot;&gt;MapR DB&lt;/a&gt; 6.0 has &lt;a href=&quot;https://community.mapr.com/community/products/blog/2017/09/25/mapr-db-60-the-modern-database-for-global-data-intensive-applications&quot;&gt;been announced&lt;/a&gt; and will be available Q4 2017. There’s been a bunch of changes in the MapR stack over the last couple of months that I’ve not been keeping up to date with (the introduction of MapR XD for starters), so we’ll loop back round in a couple of weeks to refresh our MapR information.&lt;/li&gt; &lt;li&gt;Hortonworks are &lt;a href=&quot;https://hortonworks.com/blog/3x-faster-interactive-query-hive-llap/&quot;&gt;crowing&lt;/a&gt; about the increase in &lt;a href=&quot;/technologies/apache-hive/&quot;&gt;Hive&lt;/a&gt; performance in HDP 2.6 and its support for the full suite of 99 TPC-DS queries&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://kudu.apache.org/2017/09/18/kudu-consistency-pt1.html&quot;&gt;Part 1&lt;/a&gt; on the &lt;a href=&quot;/technologies/apache-kudu/&quot;&gt;Apache Kudu&lt;/a&gt; consitency model&lt;/li&gt; &lt;li&gt;Looks like Hortonworks’ &lt;a href=&quot;https://hortonworks.com/blog/yinception-yarn-based-container-cloud-certify-hadoop-hadoop/&quot;&gt;are proud&lt;/a&gt; of the fact they run docker containers on &lt;a href=&quot;/technologies/apache-hadoop/yarn/&quot;&gt;YARN&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://www.influxdata.com/blog/introduction-to-influxdatas-influxdb-and-tick-stack/&quot;&gt;An introduction&lt;/a&gt; from InfluxData on &lt;a href=&quot;/technologies/influxdb/&quot;&gt;InfluxDB&lt;/a&gt; and the TICK stack&lt;/li&gt; &lt;/ul&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/blog/2017/09/27/the-mid-week-news/</guid> </item> <item><title>Graph Databases</title><link>http://ondataengineering.net/tech-categories/graph-databases/</link><pubDate>Tue, 26 Sep 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;Operational (OLTP) databases designed to support labelled property graph data models, where nodes and relationships have labels (types) and lists of property name-value pairs. Focus is on transactional ACID inserts/updates and traversal queries using index free adjacency (allows direct navigation between nodes without the use of indexes) over subsets of data rather than batch analytics over all data. Populate query interfaces/languages include Cypher (originated with Neo4J but now open source) and TinkerPop Gremlin (part of the TinkerPop framework that provides query capabilities and graph analytics over graph data).&lt;/p&gt; &lt;!-- Tech Category metadata --&gt; &lt;!-- Tech Vendor metadata --&gt; &lt;h2 id=&quot;further-information&quot;&gt;Further Information&lt;/h2&gt; &lt;p&gt;The Morning Paper review of the “Do we need specialized graph databases? Benchmarking real-time social networking applications” paper from the University of Waterloo, Ontario from May 2017 is worth a read before you go any further - this covers a number of use cases where relational databases perform better than dedicated graph databases, and also looks at the performance impact of using TinkerPop over a native API - &lt;a href=&quot;https://blog.acolyer.org/2017/07/07/do-we-need-specialized-graph-databases-benchmarking-real-time-social-networking-applications/&quot;&gt;https://blog.acolyer.org/2017/07/07/do-we-need-specialized-graph-databases-benchmarking-real-time-social-networking-applications/&lt;/a&gt;&lt;/p&gt; &lt;p&gt;DB Engines has a list of graph databases at &lt;a href=&quot;https://db-engines.com/en/ranking/graph+dbms&quot;&gt;https://db-engines.com/en/ranking/graph+dbms&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The Forrester Graph Databases Market Overview (&lt;a href=&quot;https://www.forrester.com/report/Market+Overview+Graph+Databases/-/E-RES121473&quot;&gt;https://www.forrester.com/report/Market+Overview+Graph+Databases/-/E-RES121473&lt;/a&gt;) covers a number of graph databases, including DataStax Enterprise, FlockDB, Neo4j and OrientDB, and has a good introduction to RDF and Graph databases.&lt;/p&gt; &lt;p&gt;The Gartner Magic Quadrant for Operational Database Management Systems (https://www.gartner.com/doc/3147919) also includes a number of graph databases, including Datastax Enterprise, Neo4j, NuoDB, and OrientDB. This can be downloaded from Microsoft (&lt;a href=&quot;https://info.microsoft.com/CO-SQL-CNTNT-FY16-09Sep-14-MQOperational-Register.html&quot;&gt;https://info.microsoft.com/CO-SQL-CNTNT-FY16-09Sep-14-MQOperational-Register.html&lt;/a&gt;) and Nuo (&lt;a href=&quot;http://go.nuodb.com/gartner-magic-quadrant.html&quot;&gt;http://go.nuodb.com/gartner-magic-quadrant.html&lt;/a&gt;) for free.&lt;/p&gt; &lt;p&gt;Bloor have a primer on graph technologies (&lt;a href=&quot;http://www.bloorresearch.com/research/spotlight/all-about-graphs-a-primer/&quot;&gt;http://www.bloorresearch.com/research/spotlight/all-about-graphs-a-primer/&lt;/a&gt;), a 2016 Graph and RDF Databases Market Report (&lt;a href=&quot;http://www.bloorresearch.com/research/market-report/graph-and-rdf-databases-2016/&quot;&gt;http://www.bloorresearch.com/research/market-report/graph-and-rdf-databases-2016/&lt;/a&gt;) and a 2016 Graph and RDF Databases Market Update (&lt;a href=&quot;http://www.bloorresearch.com/research/market-update/graph-and-rdf-databases-market-update-2016/&quot;&gt;http://www.bloorresearch.com/research/market-update/graph-and-rdf-databases-market-update-2016/&lt;/a&gt;), all of which are free to download for personal non-commercial use, and which cover a number of graph databases including ArangoDB, BlazeGraph, DataStax Enterprise, OrientDB and Neo4j.&lt;/p&gt; &lt;p&gt;And Neo4j have a number of eBooks available for free download from &lt;a href=&quot;https://neo4j.com/&quot;&gt;https://neo4j.com/&lt;/a&gt; and &lt;a href=&quot;https://neo4j.com/books/&quot;&gt;https://neo4j.com/books/&lt;/a&gt;, including a copy of O’Reilly’s Graph Databases.&lt;/p&gt; &lt;h2 id=&quot;query-languages&quot;&gt;Query Languages&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Cypher&lt;/td&gt; &lt;td&gt;Originally from Neo4j, now open source and used by a wide range of graph databases - &lt;a href=&quot;http://www.opencypher.org/&quot;&gt;http://www.opencypher.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;TinkerPop Gremlin&lt;/td&gt; &lt;td&gt;Language for writing graph traversals that’s part of the Apache TinkerPop project - &lt;a href=&quot;https://tinkerpop.apache.org/gremlin.html&quot;&gt;https://tinkerpop.apache.org/gremlin.html&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;commercial-graph-databases&quot;&gt;Commercial Graph Databases&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Neo4j&lt;/td&gt; &lt;td&gt;ACID-compliant transactional database with native graph storage and processing; open source with commercial edition; utilises Cypher - &lt;a href=&quot;https://neo4j.com/&quot;&gt;https://neo4j.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;DataStax Enterprise&lt;/td&gt; &lt;td&gt;Commercial product built on Apache Cassandra with the addition of graph and search capabilities - &lt;a href=&quot;https://www.datastax.com/&quot;&gt;https://www.datastax.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;OrientDB&lt;/td&gt; &lt;td&gt;Multi-model (key-value, graph and document) NoSQL database with TinkerPop Gremlin compatibility and both community and enterprise editions - &lt;a href=&quot;http://orientdb.com/graph-database/&quot;&gt;http://orientdb.com/graph-database/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;ArrangoDB&lt;/td&gt; &lt;td&gt;Multi-model (key-value, graph and document) NoSQL database with ACID transactions, TinkerPop compatibility and it’s own AQL query language with support for cluster deployments (including running over Mesos) - &lt;a href=&quot;http://www.arangodb.com&quot;&gt;http://www.arangodb.com&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;TigerGraph&lt;/td&gt; &lt;td&gt;Commercial hybrid OLTP/OLAP graph database that claims order of magnitude performance and scalability improvements over it’s competitors; previously known as GraphSQL - &lt;a href=&quot;http://www.tigergraph.com&quot;&gt;http://www.tigergraph.com&lt;/a&gt;, &lt;a href=&quot;http://www.zdnet.com/article/tigergraph-a-graph-database-born-to-roar/&quot;&gt;http://www.zdnet.com/article/tigergraph-a-graph-database-born-to-roar/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Sparksee&lt;/td&gt; &lt;td&gt;Graph database formally known as DEX, with support for a range of languages and use on mobile devices and TinkerPop support- &lt;a href=&quot;http://www.sparsity-technologies.com/&quot;&gt;http://www.sparsity-technologies.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;GraphBase&lt;/td&gt; &lt;td&gt;Commercial graph database designed for use in AI applications - &lt;a href=&quot;https://graphbase.ai/&quot;&gt;https://graphbase.ai/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;AgensGraph&lt;/td&gt; &lt;td&gt;Commercial multi-model (relational and graph) databases - &lt;a href=&quot;http://www.agensgraph.com/&quot;&gt;http://www.agensgraph.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Redis Graph&lt;/td&gt; &lt;td&gt;Graph database over Redis that supports a subset of neo4j’s Cypher query language - &lt;a href=&quot;http://redismodules.com/modules/redis-graph/&quot;&gt;http://redismodules.com/modules/redis-graph/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;open-source-graph-databases&quot;&gt;Open Source Graph Databases&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;JanusGraph&lt;/td&gt; &lt;td&gt;Open source distributed graph database that runs over a number of storage backends (including Cassandra, HBase and BigTable), with TinkerPop support including support for graph analytics; previously known as Titan - &lt;a href=&quot;http://janusgraph.org/&quot;&gt;http://janusgraph.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Dgraph&lt;/td&gt; &lt;td&gt;Open source graph database written in Go - &lt;a href=&quot;https://dgraph.io/&quot;&gt;https://dgraph.io/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;HyperGraphDB&lt;/td&gt; &lt;td&gt;Open Source Java graph database - &lt;a href=&quot;http://hypergraphdb.org&quot;&gt;http://hypergraphdb.org&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;InfoGrid&lt;/td&gt; &lt;td&gt;Open Source Java graph database with support for building REST APIs over the top - &lt;a href=&quot;http://infogrid.org/trac/&quot;&gt;http://infogrid.org/trac/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;VelocityDB&lt;/td&gt; &lt;td&gt;Open Source C# .NET embeddable/distributed graph database - &lt;a href=&quot;https://velocitydb.com/&quot;&gt;https://velocitydb.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;TinkerGraph&lt;/td&gt; &lt;td&gt;In memory graph databases that’s part of TinkerPop as a reference implementation - &lt;a href=&quot;http://tinkerpop.apache.org&quot;&gt;http://tinkerpop.apache.org&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;GRAKN.AI&lt;/td&gt; &lt;td&gt;Open Source graph database designed for AI use cases that also supports graph analytics - &lt;a href=&quot;https://grakn.ai&quot;&gt;https://grakn.ai&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Apache S2Graph (Incubating)&lt;/td&gt; &lt;td&gt;OLTP graph database built on Apache HBase - &lt;a href=&quot;https://s2graph.incubator.apache.org/&quot;&gt;https://s2graph.incubator.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;HGraphDB&lt;/td&gt; &lt;td&gt;Open Source implementation of TinkerPop API for Apache HBase - &lt;a href=&quot;https://github.com/rayokota/hgraphdb&quot;&gt;https://github.com/rayokota/hgraphdb&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Sqlg&lt;/td&gt; &lt;td&gt;Open Source implementation of TinkerPop API over relational databases - &lt;a href=&quot;http://www.sqlg.org/&quot;&gt;http://www.sqlg.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Unipop&lt;/td&gt; &lt;td&gt;Open source TinkerPop API over a range of backends including Elasticsearch and JDBC &lt;a href=&quot;https://github.com/unipop-graph/unipop&quot;&gt;https://github.com/unipop-graph/unipop&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;combined-graphrdf-databases&quot;&gt;Combined Graph/RDF Databases&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;OpenLink Virtuoso Universal Server&lt;/td&gt; &lt;td&gt;Supports persistence of documents, relational, RDF and graph data - &lt;a href=&quot;https://virtuoso.openlinksw.com/&quot;&gt;https://virtuoso.openlinksw.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Franz AllegroGraph&lt;/td&gt; &lt;td&gt;Commercial ACID compliant that supports both RDF and property graphs, with a free edition available - &lt;a href=&quot;https://allegrograph.com/allegrograph/&quot;&gt;https://allegrograph.com/allegrograph/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Complexible Stardog&lt;/td&gt; &lt;td&gt;RDF database that also support property graphs and data virtualisation, with a community edition available - &lt;a href=&quot;http://www.stardog.com/&quot;&gt;http://www.stardog.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;BlazeGraph&lt;/td&gt; &lt;td&gt;Open Source RDF graph database with property graph features, queryable via SPARQL and Tinkerpop - &lt;a href=&quot;https://www.blazegraph.com/&quot;&gt;https://www.blazegraph.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;graph-databases-as-a-service&quot;&gt;Graph Databases as a Service&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Microsoft Azure Cosmos DB&lt;/td&gt; &lt;td&gt;Massively scalable, low latency multi-model (key-value, graph and document) cloud NoSQL database service, previously known as Azure DocumentDB - &lt;a href=&quot;https://azure.microsoft.com/en-us/services/cosmos-db/&quot;&gt;https://azure.microsoft.com/en-us/services/cosmos-db/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;IBM Graph&lt;/td&gt; &lt;td&gt;Graph database as a service built using JanusGraph - &lt;a href=&quot;https://www.ibm.com/us-en/marketplace/graph&quot;&gt;https://www.ibm.com/us-en/marketplace/graph&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;historical--deprecated-graph-databases&quot;&gt;Historical / Deprecated Graph Databases&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Objectivity InfiniteGraph&lt;/td&gt; &lt;td&gt;End of life, with functionality being migrated into Objectivity/DB and ThingSpan - &lt;a href=&quot;http://www.objectivity.com/products/infinitegraph/&quot;&gt;http://www.objectivity.com/products/infinitegraph/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;FlockDB&lt;/td&gt; &lt;td&gt;Open Source distributed graph database from Twitter, however no longer maintained - &lt;a href=&quot;https://github.com/twitter-archive/flockdb&quot;&gt;https://github.com/twitter-archive/flockdb&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;GlobalsDB&lt;/td&gt; &lt;td&gt;Open Source, now dead - &lt;a href=&quot;https://github.com/Globals/GlobalsDB&quot;&gt;https://github.com/Globals/GlobalsDB&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/tech-categories/graph-databases/</guid> </item> <item><title>RDF Databases</title><link>http://ondataengineering.net/tech-categories/rdf-databases/</link><pubDate>Mon, 25 Sep 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;Databases designed to support the storage of RDF (or triple) data. RDF (Resource Description Framework) is a W3C data model standard that describes data as subject–predicate–object expressions (or triples). This allows the creation of graphs of knowledge, however unlike more general purpose graph databases, there is no support for properties or labels - everything is represented using triples. Data is queried using the SPARQL query language (another W3C standard). Internally, data can be considered to be stored as a single table containing three columns (the subject, predicate and object), with indexing to support the traversal and enumeration of predicates (relationsips) for a given subject. A number of triple ontologies (or schemas) are also available that define standard subject/object and predicate types allowing for data interchange, including OWL and RDFS. The W3C standards were introduced to support semantic web and Linked Open Data use cases that focus on semantics and inference.&lt;/p&gt; &lt;!-- Tech Category metadata --&gt; &lt;!-- Tech Vendor metadata --&gt; &lt;h2 id=&quot;further-information&quot;&gt;Further Information&lt;/h2&gt; &lt;p&gt;The W3C standards for RDF and SPARQL are available online at &lt;a href=&quot;https://www.w3.org/RDF/&quot;&gt;https://www.w3.org/RDF/&lt;/a&gt; and &lt;a href=&quot;http://www.w3.org/TR/rdf-sparql-query/&quot;&gt;http://www.w3.org/TR/rdf-sparql-query/&lt;/a&gt; respectively. The relevant Wikipedia pages are also good places to start at &lt;a href=&quot;https://en.wikipedia.org/wiki/Resource_Description_Framework&quot;&gt;https://en.wikipedia.org/wiki/Resource_Description_Framework&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/SPARQL&quot;&gt;https://en.wikipedia.org/wiki/SPARQL&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;DB Engines has a list of RDF databases at &lt;a href=&quot;https://db-engines.com/en/ranking/rdf+store&quot;&gt;https://db-engines.com/en/ranking/rdf+store&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The Forrester Graph Databases Market Overview (&lt;a href=&quot;https://www.forrester.com/report/Market+Overview+Graph+Databases/-/E-RES121473&quot;&gt;https://www.forrester.com/report/Market+Overview+Graph+Databases/-/E-RES121473&lt;/a&gt;) covers a number of RDF databases, including StarDog, AllegroGraph and Oracle, and has a good introduction to RDF and Graph databases.&lt;/p&gt; &lt;p&gt;And Bloor have a primer on graph technologies (&lt;a href=&quot;http://www.bloorresearch.com/research/spotlight/all-about-graphs-a-primer/&quot;&gt;http://www.bloorresearch.com/research/spotlight/all-about-graphs-a-primer/&lt;/a&gt;), a 2016 Graph and RDF Databases Market Report (&lt;a href=&quot;http://www.bloorresearch.com/research/market-report/graph-and-rdf-databases-2016/&quot;&gt;http://www.bloorresearch.com/research/market-report/graph-and-rdf-databases-2016/&lt;/a&gt;) and a 2016 Graph and RDF Databases Market Update (&lt;a href=&quot;http://www.bloorresearch.com/research/market-update/graph-and-rdf-databases-market-update-2016/&quot;&gt;http://www.bloorresearch.com/research/market-update/graph-and-rdf-databases-market-update-2016/&lt;/a&gt;), all of which are free to download for personal non-commercial use, and which cover a number of RDF databases including AllegroGraph, BlazeGraph, Cray, GraphDB, MarkLogic, Stardog and Virtuoso.&lt;/p&gt; &lt;h2 id=&quot;rdf-frameworks&quot;&gt;RDF Frameworks&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Eclipse RDF4J&lt;/td&gt; &lt;td&gt;An Eclipse open source project for working with RDF data, including provision of a standard SPARQL interface that can be integrated with backend databases. Previously known as Sesame - &lt;a href=&quot;http://rdf4j.org/&quot;&gt;http://rdf4j.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Jena&lt;/td&gt; &lt;td&gt;Framework for developing Semantic Web and Linked Data applications in Java - &lt;a href=&quot;http://jena.apache.org/&quot;&gt;http://jena.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Commons RDF&lt;/td&gt; &lt;td&gt;Commons library for working with RDF data - &lt;a href=&quot;http://commons.apache.org/proper/commons-rdf/&quot;&gt;http://commons.apache.org/proper/commons-rdf/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Redland&lt;/td&gt; &lt;td&gt;Open source C libraries for working with RDF data - &lt;a href=&quot;http://librdf.org/&quot;&gt;http://librdf.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;CubicWeb&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.cubicweb.org/&quot;&gt;https://www.cubicweb.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;commercial-rdf-databases&quot;&gt;Commercial RDF Databases&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;MarkLogic&lt;/td&gt; &lt;td&gt;Commercial ACID compliant XML/JSON document store with support for creation of triple indexes over documents queryable via SPARQL - &lt;a href=&quot;http://www.marklogic.com/&quot;&gt;http://www.marklogic.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;OpenLink Virtuoso Universal Server&lt;/td&gt; &lt;td&gt;Supports persistence of documents, relational, RDF and graph data - &lt;a href=&quot;https://virtuoso.openlinksw.com/&quot;&gt;https://virtuoso.openlinksw.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Franz AllegroGraph&lt;/td&gt; &lt;td&gt;Commercial ACID compliant that supports both RDF and property graphs, with a free edition available - &lt;a href=&quot;https://allegrograph.com/allegrograph/&quot;&gt;https://allegrograph.com/allegrograph/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Ontotext GraphDB&lt;/td&gt; &lt;td&gt;Commercial RDF database, previously known as OWLIM, and with a free edition available - &lt;a href=&quot;https://ontotext.com/products/graphdb/&quot;&gt;https://ontotext.com/products/graphdb/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Complexible Stardog&lt;/td&gt; &lt;td&gt;RDF database that also support property graphs and data virtualisation, with a community edition available - &lt;a href=&quot;http://www.stardog.com/&quot;&gt;http://www.stardog.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Dydra&lt;/td&gt; &lt;td&gt;Cloud based - &lt;a href=&quot;https://dydra.com/&quot;&gt;https://dydra.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;SparkleDB&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.syssurge.com/Products/SparkleDB/Home.aspx&quot;&gt;https://www.syssurge.com/Products/SparkleDB/Home.aspx&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Cray Graph Engine&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.cray.com/products/analytics/cray-graph-engine&quot;&gt;https://www.cray.com/products/analytics/cray-graph-engine&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Oracle Spatial and Graph option for Oracle Database&lt;/td&gt; &lt;td&gt;Adds RDF (and graph) capabilities to the Oracle database - &lt;a href=&quot;http://www.oracle.com/technetwork/database/options/spatialandgraph/overview/index.html&quot;&gt;http://www.oracle.com/technetwork/database/options/spatialandgraph/overview/index.html&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RDF Graph for Oracle NoSQL Database&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;http://www.oracle.com/technetwork/database/database-technologies/nosqldb/overview/index.html&quot;&gt;http://www.oracle.com/technetwork/database/database-technologies/nosqldb/overview/index.html&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;open-source-rdf-databases&quot;&gt;Open Source RDF Databases&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;BlazeGraph&lt;/td&gt; &lt;td&gt;Open Source RDF graph database with property graph features, queryable via SPARQL and Tinkerpop - &lt;a href=&quot;https://www.blazegraph.com/&quot;&gt;https://www.blazegraph.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;4store&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://github.com/4store/4store&quot;&gt;https://github.com/4store/4store&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RedStore&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.aelius.com/njh/redstore/&quot;&gt;https://www.aelius.com/njh/redstore/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Mulgara&lt;/td&gt; &lt;td&gt;Open source java RDF database - &lt;a href=&quot;http://mulgara.org/&quot;&gt;http://mulgara.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;BrightstarDB&lt;/td&gt; &lt;td&gt;Open Source RDF database for the .NET platform - &lt;a href=&quot;http://brightstardb.com/&quot;&gt;http://brightstardb.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Strabon&lt;/td&gt; &lt;td&gt;Spatiotemporal RDF store - &lt;a href=&quot;http://www.strabon.di.uoa.gr/&quot;&gt;http://www.strabon.di.uoa.gr/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Rya (Incubating)&lt;/td&gt; &lt;td&gt;RDF triple store built on Apache Accumulo - &lt;a href=&quot;http://rya.apache.org/&quot;&gt;http://rya.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;data-virtualization&quot;&gt;Data Virtualization&lt;/h2&gt; &lt;p&gt;A number of &lt;a href=&quot;/tech-categories/data-virtualization/&quot;&gt;Data Virtualization&lt;/a&gt; support the exposure of data through RDF data models&lt;/p&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/tech-categories/rdf-databases/</guid> </item> <item><title>The Week That Was</title><link>http://ondataengineering.net/blog/2017/09/22/the-week-that-was/</link><pubDate>Fri, 22 Sep 2017 07:45:00 +0100</pubDate> <description> &lt;p&gt;When I decided this week was graph technologies week, I think I probably knew that it was too big a topic to do in one week, and so it’s proved. So, so new content this week, but to sweeten the blow, next week there should be four technology categories and at least three technology summaries coming down the pipe.&lt;/p&gt; &lt;p&gt;So apologies there’s not much this week, but next week should be a bumper week!&lt;/p&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/blog/2017/09/22/the-week-that-was/</guid> </item> <item><title>The Mid Week News - 20/09/2017</title><link>http://ondataengineering.net/blog/2017/09/20/the-mid-week-news/</link><pubDate>Wed, 20 Sep 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;Right - time for the mid week news again. There’s a few new software releases this week to cover, plus a bunch of interesting blog posts. &lt;!--more--&gt;&lt;/p&gt; &lt;p&gt;Technology updates (details are on the relevant technology pages):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;/technologies/apache-hbase&quot;&gt;Apache HBase&lt;/a&gt; has got a 2.0 alpha-2 release&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;/technologies/apache-impala&quot;&gt;Apache Impala&lt;/a&gt; is up to 2.10&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;/technologies/apache-kudu&quot;&gt;Apache Kudu&lt;/a&gt; is up to 1.5&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;/technologies/greenplum/&quot;&gt;Greenplum&lt;/a&gt; has hit the big 5.0&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;/technologies/pravega/&quot;&gt;Pravega&lt;/a&gt; has hit 0.1&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Technology news:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://azure.microsoft.com/en-us/blog/events-data-points-and-messages-choosing-the-right-azure-messaging-service-for-your-data/&quot;&gt;Details&lt;/a&gt; from Microsoft on the different messaging services in &lt;a href=&quot;/tech-vendors/microsoft-azure/&quot;&gt;Azure&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Another from Confluent trying to explain how technologies like &lt;a href=&quot;/technologies/apache-kafka&quot;&gt;Kafka&lt;/a&gt; might change the analytics space, this time on &lt;a href=&quot;https://www.confluent.io/blog/okay-store-data-apache-kafka/&quot;&gt;why it’s ok to store data in Kafka long term&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Again from Confluent, and this is always interesting - details on &lt;a href=&quot;https://www.confluent.io/blog/apache-kafka-tested/&quot;&gt;how they test Kafka&lt;/a&gt;&lt;/li&gt; &lt;li&gt;So it’s an advert for Waterline, but I think the principles are probably sound. From MapR - &lt;a href=&quot;https://mapr.com/blog/why-atlas-and-navigator-dont-cut-it/&quot;&gt;Why Atlas and Navigator don’t cut it&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-9803&quot;&gt;CVE-2017-903&lt;/a&gt; - Solr Kerberos issues with delegation tokens when using SecurityAwareZkACLProvider type of ACL provider e.g. SaslZkACLProvider&lt;/li&gt; &lt;li&gt;The &lt;a href=&quot;https://hortonworks.com/downloads/&quot;&gt;Hortonworks download page&lt;/a&gt; now includes links for IBM Data Science and IBM Big SQL&lt;/li&gt; &lt;li&gt;Fight time! Hortonworks have &lt;a href=&quot;https://hortonworks.com/blog/hbase-cassandra-benchmark/&quot;&gt;YCSB benchmark results&lt;/a&gt; for HBase vs Cassandra&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;http://www.zdnet.com/article/pivotal-greenplum-is-alive-and-kicking/&quot;&gt;Thoughts from ZDNet&lt;/a&gt; on &lt;a href=&quot;/technologies/greenplum&quot;&gt;Greenplum&lt;/a&gt; (which has just seen a 5.0 release)&lt;/li&gt; &lt;/ul&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/blog/2017/09/20/the-mid-week-news/</guid> </item> <item><title>The Plan For This Week - 18/09/2017</title><link>http://ondataengineering.net/blog/2017/09/18/the-plan-for-this-week/</link><pubDate>Mon, 18 Sep 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;So we’re got some big topics to look at before we finish our look through data storage and database technologies. This week, it’s time for a deep breath as we dive into graph technologies.&lt;/p&gt; &lt;p&gt;There’s a heady mix of different technologies in this space, from OLTP databases, to graph analytics frameworks, to RDF/triple technologies. Let’s see what sort of sense we can make of them all…&lt;/p&gt; &lt;p&gt;As usual, (at least one) technology category page on Friday with some associated thoughts, and maybe some technology summaries during the week.&lt;/p&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/blog/2017/09/18/the-plan-for-this-week/</guid> </item> <item><title>Thoughts on Data Virtualization</title><link>http://ondataengineering.net/blog/2017/09/15/thoughts-on-data-virtualization/</link><pubDate>Fri, 15 Sep 2017 07:45:00 +0100</pubDate> <description> &lt;p&gt;That’s another week down (don’t worry, there are plenty to go), so let’s talk about &lt;a href=&quot;/tech-categories/data-virtualization/&quot;&gt;Data Virtualization&lt;/a&gt;, our topic for the week… &lt;!--more--&gt;&lt;/p&gt; &lt;p&gt;My personal view is that Data Virtualization is a really powerful component in your data integration story, but it’s probably not well known or understood. It’s also the first technology category we’ve looked at where the open source offerings significantly lag the commercial ones, with the first commercial technologies (Composite and Denodo) having been round since the turn of the millennium and a wide range of commercial offerings now available, whereas the open source offerings tend to focus on a slightly narrower use case and are relatively new.&lt;/p&gt; &lt;p&gt;So what is Data Virtualization (some times also known as Data Federation / Enterprise Information Integration)? It’s a technology that allows you to run analytics (queries) over data in multiple disparate sources, allowing that data to be exploited as an integrated set without having to physically move it into a single database or data store. Most technologies in this space also allow the definition of a logical schema or semantic model over the source data so that users don’t have to understand the complexities of the source data, in addition to being able to run ad-hoc queries over the raw source data. Fundamentally it’s a data integration tool - bringing multiple data sources together so they can be exploited as a single integrated data set.&lt;/p&gt; &lt;p&gt;So why are these tools useful?&lt;/p&gt; &lt;p&gt;Firstly, for some use cases you might be able to avoid having any analytical platform whatsoever - if you can generate all the analytics you want over the data in it’s original source, that’s a huge win. However, that obviously puts extra load on those sources, and all of the complexity in integrating the source data together is now embedded in your data virtualization layer and the cost of this is going to be incurred at query time.&lt;/p&gt; &lt;p&gt;The first of these issues (the load on the sources) can be addressed by moving the data from it’s original source into an analytical platform that can support this query load (let’s call this a Data Lake for arguments sake). No transformation or integration, but it’s now somewhere that can support the level and types of data access that our analytics via our virtualization layer requires.&lt;/p&gt; &lt;p&gt;The second of these issues can be addressed in two ways. Firstly, many of these technologies (including &lt;a href=&quot;/technologies/denodo-platform/&quot;&gt;Denodo&lt;/a&gt;, the technology we looked at in more detail this week), can cache tables defined within their semantic layer (and update these on an incremental or scheduled basis). So we now have a tool in which we define the rules and logic for integrating our set of data sources, which will then ensure that a materialised physical copy of the results of this logic is available at all times for querying. And that sounds exactly like what we would traditionally try to achieve with a traditional data integration tool.&lt;/p&gt; &lt;p&gt;And although there will be limits to the complexity of the data transformation and integration that a Data Virtualization tool can support that might require you to break out custom data transformation pipelines (and tools like Denodo support the use of external technologies for generating data in it’s materialised cache), it will generally always be quicker and easier to integrate data using a Data Virtualization tool, and therefore there is likely always a role for them to pay in either prototyping or the rapid development of some integrations (which some call Agile ETL).&lt;/p&gt; &lt;p&gt;By the second (and probably more important) reason that these tools are useful is that they allow you to run ad-hoc queries and analytics across data that hasn’t been integrated and prepared for analytics. No matter how much data preparation and integration you do, there will always be some ad-hoc questions you want to ask that aren’t supported by your integrated and prepared data. So what’s your option now - spend the time and effort integrating that data in (when perhaps you don’t yet know how valuable it’s going to be) or do a pile of bespoke one off integration work? And this is where (for me) a lot of the value of Data Virtualization tools lie - they allow analysts (for what of a better term) to run these exploratory ad-hoc analytics over raw (or rawer) source data without having to do a pile of painful and expensive integration work. And that can be an enormous win in exploring and understanding where the value is in your data, and where you should focus your efforts on pre integrating and preparing data.&lt;/p&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/blog/2017/09/15/thoughts-on-data-virtualization/</guid> </item> <item><title>Data Virtualization</title><link>http://ondataengineering.net/tech-categories/data-virtualization/</link><pubDate>Fri, 15 Sep 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;Tools that enable the execution of data queries across multiple data sources. Most support the ability to create a semantic layer or virtual data schema across the underlying data sources (including the caching or materialization of tables within this layer and the ability to update it and therefore the underlying data sources) alongside the ability to run arbitary queries across the underlying data (including in some cases the ability to do this without first defining the schema of the data in these sources). Query logic is pushed down where possible so that it's executed in the underlying data source, with joins and aggregation of data from multiple sources then performed within the data virtualisation layer. Sometimes refered to as data federation.&lt;/p&gt; &lt;!-- Tech Category metadata --&gt; &lt;!-- Tech Vendor metadata --&gt; &lt;h2 id=&quot;further-information&quot;&gt;Further Information&lt;/h2&gt; &lt;p&gt;There’s a wealth of information from analyst organisation on these tools.&lt;/p&gt; &lt;p&gt;Forrester publishes a Forrester Wave on Enterprise Data Virtualization, last published in 2015 (&lt;a href=&quot;https://www.forrester.com/report/The+Forrester+Wave+Enterprise+Data+Virtualization+Q1+2015/-/E-RES117844&quot;&gt;here&lt;/a&gt;), with an update scheduled for November 2017.&lt;/p&gt; &lt;p&gt;Gartner include Data Virtualisation tools as part of their &lt;a href=&quot;https://www.gartner.com/doc/3777464/magic-quadrant-data-integration-tools&quot;&gt;Data Integration Magic Quadrant&lt;/a&gt;. This can be acquired from a number of sources including Denodo &lt;a href=&quot;https://www.denodo.com/en/page/2017-gartner-magic-quadrant-data-integration-tools&quot;&gt;here&lt;/a&gt;, Informatica &lt;a href=&quot;https://www.informatica.com/gb/data-integration-magic-quadrant.html&quot;&gt;here&lt;/a&gt; and Talend &lt;a href=&quot;https://info.talend.com/gartnermqdi.html&quot;&gt;here&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Garner also publish a &lt;a href=&quot;https://www.gartner.com/doc/3778873/market-guide-data-virtualization&quot;&gt;Market Guide for Data Virtualization&lt;/a&gt;, which is available for download from Rocket Software &lt;a href=&quot;http://info.rocketsoftware.com/rocket-data-virtualization-gartner-report.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;h2 id=&quot;enterprise-vendors&quot;&gt;“Enterprise” Vendors&lt;/h2&gt; &lt;p&gt;The following are capabilities that exist as part of wider data integration and management product suites:&lt;/p&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Informatica Platform&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.informatica.com/gb/products/data-integration/real-time-integration/data-virtualization.html&quot;&gt;https://www.informatica.com/gb/products/data-integration/real-time-integration/data-virtualization.html&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;IBM Infosphere Federation Server&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;http://www-03.ibm.com/software/products/da/ibminfofedeserv&quot;&gt;http://www-03.ibm.com/software/products/da/ibminfofedeserv&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;SAS Federation Server&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.sas.com/en_us/software/federation-server.html&quot;&gt;https://www.sas.com/en_us/software/federation-server.html&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;Oracle, SAP and Microsoft also claim capabilities in this space, however these generally aren’t through specific federation / virtualization products.&lt;/p&gt; &lt;h2 id=&quot;specialist-vendors&quot;&gt;Specialist Vendors&lt;/h2&gt; &lt;p&gt;The following are capabilities from specialist vendors:&lt;/p&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Cisco Information Server&lt;/td&gt; &lt;td&gt;Originally Composite, one of the first and most established products in this space &lt;a href=&quot;http://www.compositesw.com/data-virtualization/&quot;&gt;http://www.compositesw.com/data-virtualization/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/denodo-platform/&quot;&gt;Denodo Platform&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Very well established and mature product, with free express edition&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RedHat JBoss Data Virtualization&lt;/td&gt; &lt;td&gt;Originally Metamatrix - &lt;a href=&quot;https://www.redhat.com/en/technologies/jboss-middleware/data-virtualization&quot;&gt;https://www.redhat.com/en/technologies/jboss-middleware/data-virtualization&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Stone Bond Enterprise Enabler&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;http://stonebond.com/&quot;&gt;http://stonebond.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Data Virtuality&lt;/td&gt; &lt;td&gt;Marketed as a logical data warehouse tool - &lt;a href=&quot;https://datavirtuality.com/&quot;&gt;https://datavirtuality.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Information Builders iWay Data Hub&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;http://www.informationbuilders.com/products/eii&quot;&gt;http://www.informationbuilders.com/products/eii&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Querona&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.querona.com/&quot;&gt;https://www.querona.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;K2View&lt;/td&gt; &lt;td&gt;Specialises in entity (e.g. customer) based views of data aggregated from multple sources - &lt;a href=&quot;http://www.k2view.com&quot;&gt;http://www.k2view.com&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;OpenLink Virtuoso Universal Server&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://virtuoso.openlinksw.com/&quot;&gt;https://virtuoso.openlinksw.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Progress DataDirect&lt;/td&gt; &lt;td&gt;Connectors for vast range of data sources - &lt;a href=&quot;https://www.progress.com/datadirect-connectors&quot;&gt;https://www.progress.com/datadirect-connectors&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Rocket Data Virtualization&lt;/td&gt; &lt;td&gt;Focus on mainframe data - &lt;a href=&quot;http://www.rocketsoftware.com/products/rocket-data&quot;&gt;http://www.rocketsoftware.com/products/rocket-data&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;semantic-web-technologies&quot;&gt;Semantic Web Technologies&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Capsenta Ultrawrap&lt;/td&gt; &lt;td&gt;Virtualizes relational databases as an RDF semantic web data source - &lt;a href=&quot;https://capsenta.com/&quot;&gt;https://capsenta.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;D2RQ&lt;/td&gt; &lt;td&gt;Opens source platform for accessing relational databases as an RDF graph - &lt;a href=&quot;http://d2rq.org/&quot;&gt;http://d2rq.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Complexible Stardog&lt;/td&gt; &lt;td&gt;RDF database that also support property graphs and data virtualisation - &lt;a href=&quot;http://www.stardog.com/&quot;&gt;http://www.stardog.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;open-source-technologies&quot;&gt;Open Source Technologies&lt;/h2&gt; &lt;p&gt;The following are both Apache technologies, focusing on querying across analytical datastores:&lt;/p&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-drill/&quot;&gt;Apache Drill&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Support for querying across HDFS, object stores, JDBC and NoSQL wide column stores&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Apache Lens&lt;/td&gt; &lt;td&gt;Data cube queries over range of data sources - &lt;a href=&quot;http://lens.apache.org/&quot;&gt;http://lens.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/tech-categories/data-virtualization/</guid> </item> <item><title>Denodo Platform</title><link>http://ondataengineering.net/technologies/denodo-platform/</link><pubDate>Thu, 14 Sep 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;Data Virtualisation platform, enabling a logical schema to be defined over a range of relational, NoSQL, flat file and application / data APIs that can then be queried through a range of end points. Supported data sources include a wide range of databases (relational, in memory, MPP, Hadoop, cloud, OLAP cube and NoSQL), flat files (Hadoop, text, binary, Office, including support for (S)FTP, compression and encryption), application APIs (e.g. Salesforce, SAP, Oracle e-business, Twitter), RDF semantic repositories via SPARQL, mainframes, data APIs (SOAP and REST), JMS queues and the ability to scrape web pages, with data accessible via SQL (JDBC, ODBC), data APIs (SOAP and REST) and web widgets (Sharepoint, Java, AJAX), with the ability to transform, cleanse and combine data from multiple sources into a single semantic model using the relevant source system query language. Supports a dynamic query optimiser (which pushes query logic down to the underlying data source, with the ability to move data between sources and take advantage of data replicated in multiple sources to maximise logic pushdown), caching (either by query or by full materialisation, allowing tables in the semantic layer to be pre-generated, with support for scheduled and incremental updates and the use of external ETL tools), data writes back to source (with support for a distributed transaction manager and 2-phase commits), a full security model (role based access control at the row/column level, with authentication pass-through to data sources), resource and workload management, metadata visualisation (including search and lineage views), self service data discovery (execution of ad-hoc queries outside of the semantic layer), search (over data and metadata, including support for semantic mining and extraction of text sources), an SDK (for adding new source adapters, custom functions and stored procedures), and a graphical UI (supporting wizard-driven configuration, integration with external configuration management tools and release management). Can we deployed stand alone or as a cluster (supporting both active/active and active/passive configurations and shared caches, with support for geo-replication), and is also available for AWS and as a free Denodo Express version (with limits on the number of active queries and results). A commercial product from Denodo Technologies Inc, who were founded in 1999 with the first release of the Denodo Platform shortly afterwards.&lt;/p&gt; &lt;!-- Tech Category metadata --&gt; &lt;h2&gt;Technology Information&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Commercial&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Last Updated&lt;/td&gt;&lt;td&gt;September 2017 - v6.0&lt;/td&gt;&lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://www.denodo.com/en&quot;&gt;https://www.denodo.com/en&lt;/a&gt; - homepage&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://community.denodo.com/&quot;&gt;https://community.denodo.com/&lt;/a&gt; - community site, including documentation and tutorials&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;news&quot;&gt;News&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;http://www.datavirtualizationblog.com/&quot;&gt;http://www.datavirtualizationblog.com/&lt;/a&gt; - blog&lt;/li&gt; &lt;/ul&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/technologies/denodo-platform/</guid> </item> <item><title>The Mid Week News - 13/09/2017</title><link>http://ondataengineering.net/blog/2017/09/13/the-mid-week-news/</link><pubDate>Wed, 13 Sep 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;It’s the middle of the week, which means it’s time for the news… &lt;!--more--&gt;&lt;/p&gt; &lt;p&gt;Technology updates (details are on the relevant technology pages):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;/technologies/elasticsearch/&quot;&gt;Elasticsearch&lt;/a&gt;, &lt;a href=&quot;/technologies/elastic-x-pack/&quot;&gt;Elastic X-Pack&lt;/a&gt; and &lt;a href=&quot;/technologies/elasticsearch-hadoop/&quot;&gt;Elasticsearch Hadoop&lt;/a&gt; have all seen a 5.6 release - a minor point release before the big upcoming 6.0 release&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Technology news:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Data Artisans have &lt;a href=&quot;https://data-artisans.com/blog/da-platform-2-stateful-stream-processing-with-apache-flink-made-easier&quot;&gt;announced dA Platform 2&lt;/a&gt; - which adds application lifecycle managment and components for logging and metrics to &lt;a href=&quot;/technologies/apache-flink/&quot;&gt;Apache Flink&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Amazon have &lt;a href=&quot;https://aws.amazon.com/about-aws/whats-new/2017/09/new-quick-start-build-a-data-lake-foundation-on-the-aws-cloud-with-aws-services/&quot;&gt;announced&lt;/a&gt; a new full stack data lake quickstart that runs on &lt;a href=&quot;/tech-vendors/amazon-web-services/&quot;&gt;AWS&lt;/a&gt; - we should take a look at full stack solutions at some point&lt;/li&gt; &lt;li&gt;Amazon also have a &lt;a href=&quot;https://aws.amazon.com/blogs/big-data/unite-real-time-and-batch-analytics-using-the-big-data-lambda-architecture-without-servers/&quot;&gt;post&lt;/a&gt; on implementing the Lambda architecture on &lt;a href=&quot;/tech-vendors/amazon-web-services/&quot;&gt;AWS&lt;/a&gt; without having to deploy or manage any servers&lt;/li&gt; &lt;li&gt;And it’s &lt;a href=&quot;https://www.confluent.io/blog/simplest-useful-kafka-connect-data-pipeline-world-thereabouts-part-3/&quot;&gt;part 3&lt;/a&gt; from Confluent on how to get started with &lt;a href=&quot;/technologies/apache-kafka/kafka-connect/&quot;&gt;Kafka Connect&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/blog/2017/09/13/the-mid-week-news/</guid> </item> <item><title>The Plan For This Week - 11/09/2017</title><link>http://ondataengineering.net/blog/2017/09/11/the-plan-for-this-week/</link><pubDate>Mon, 11 Sep 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;Right - time for a new week.&lt;/p&gt; &lt;p&gt;The observant among you may have spotted that we’re working our way through data storage and database technologies before we make a start on data transformation. There’s not far to go - graph databases and analytical databases are the big ones, but we’ll touch on data format libraries (Avro, Parquet et al) as well before we finish, and I need to have a think about whether I want to cover any more NoSQL technologies.&lt;/p&gt; &lt;p&gt;But this week, I want to look at data virtualisation technologies - those that allow you to query over and across data stored in multiple underlying platforms. As always, we’ll publish a technology category page on Friday along with some thoughts, and try and crank out some technology summaries during the week.&lt;/p&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/blog/2017/09/11/the-plan-for-this-week/</guid> </item> <item><title>Thoughts on In Memory Databases</title><link>http://ondataengineering.net/blog/2017/09/08/thoughts-on-in-memory-databases/</link><pubDate>Fri, 08 Sep 2017 07:45:00 +0100</pubDate> <description> &lt;p&gt;So this week has been a bit of a mess, with late posts and no technology summaries. My apologies - I’m going to blame technology issues, and promise that it won’t happen again (even though it undoubtedly will).&lt;/p&gt; &lt;p&gt;Anyway, this week I’ve been looking at &lt;a href=&quot;/tech-categories/in-memory-databases/&quot;&gt;In Memory Databases&lt;/a&gt;, and I’ll warn you in advance that there’s going to be heavy use of quotes around “in memory”… &lt;!--more--&gt;&lt;/p&gt; &lt;p&gt;I guess my first thought is that this probably isn’t a technology category in it’s own right - all the technologies on the technology category page (&lt;a href=&quot;/tech-categories/in-memory-databases/&quot;&gt;here&lt;/a&gt; if you missed the link in the paragraph above) are in memory versions of other technology categories - primarily relational databases, NoSQL key value stores and Hadoop compatible filesystems. So, don’t be surprised at some point if this technology category disappears as all the technologies on it get added to other technology category pages.&lt;/p&gt; &lt;p&gt;So, why go “in memory”? Well, the short and simple answer is speed - memory is faster than SSDs which in turn is faster than disks, and if all your data is in memory, you’re going to be able to execute queries and return data an order of magnitude faster than if you were having to pull it off disk. But having an “in memory” database doesn’t mean that you don’t want your data persisted (in almost all use cases you do), and so even “in memory” databases need to support durable writes of new data to disk and restoration of state on startup. And so the conceptual difference between “on disk” and “in memory” databases is all about when and how much data is loaded from disk into memory - for “in memory” databases it’s all data on startup and sod the memory usage, for “on disk” databases it’s just enough data when required and we’ll be frugal with your memory sir. But this distinction has pretty significant architectural implications - just sticking a RAM disk underneath an “on disk” database, or throwing more memory at it, tends to have limited benefit - the entire data access path needs to change to reflect the fact the data is in memory rather than on disk (and doesn’t need to be fetched dynamically into memory when required for starters).&lt;/p&gt; &lt;p&gt;First up were the in memory caches (memcached, Redis and the like), simple key value data stores that allowed applications to cache the results of queries or operations or hold state, with their simplicity supporting robust high performance data stores. They’ve now been given fancy names (like data grids), but at the moment I’m not entirely convinced of the use case for these within an analytics ecosystem so am not proposing to create a technology category page for them, but I look forward to being corrected and educated.&lt;/p&gt; &lt;p&gt;The big technologies for us that have started moving to “in memory” are relational SQL databases. All the big enterprise vendors are investing in this space, allowing entire tables to be permanently cached into memory, and making much better use of any memory available., but the technologies that are probably more interesting are the new specialist “in memory” technologies. There’s a range of these listed on the technology page, but there’s a couple I want to call out.&lt;/p&gt; &lt;p&gt;Firstly, there are a some (&lt;a href=&quot;/technologies/apache-ignite&quot;&gt;GridGain/Apache Ignite&lt;/a&gt; and Oracle Times Ten for starters) that can use other relational databases for their backing storage (a range for Ignite, Oracle for Time Tens), meaning that can be used as a drop in cache between your application and your “on disk” database, providing performance improvements without significant application changes.&lt;/p&gt; &lt;p&gt;The others are MapD and Kinetica - not only do these run in memory but they can also exploit GPUs for even further acceleration. If you’re really looking at pushing the boundaries of relational database performance, this would be a fascinating place to start.&lt;/p&gt; &lt;p&gt;And finally we get to the Hadoop compatible / distributed parallel “in memory” filesystems - same principle, different use case. There are two technologies in this space - &lt;a href=&quot;/technologies/alluxio/&quot;&gt;Alluxio&lt;/a&gt; and &lt;a href=&quot;/technologies/apache-ignite&quot;&gt;GridGain/Apache Ignite&lt;/a&gt;. Alluxio is focused on filesystems, supporting a FUSE driver (allowing an in memory filesystem to be mounted in Linux) as well as Hadoop compatibility, with the ability to tier data onto a range of different persistent storage technologies, allowing it to support larger filesystems that will fit in memory. Ignite seems to be the Swiss Army knife in the in memory space, supporting key value, SQL and filesystem APIs (amongst a raft of other capabilities).&lt;/p&gt; &lt;p&gt;Right - I’ve had enough of this week. See you on Monday for a fresh start.&lt;/p&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/blog/2017/09/08/thoughts-on-in-memory-databases/</guid> </item> <item><title>In Memory Databases</title><link>http://ondataengineering.net/tech-categories/in-memory-databases/</link><pubDate>Fri, 08 Sep 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;Technologies that serve data entirely or primarily from memory, with the aim of providing significant higher performance for querying and accessing data. They are generally backed by some sort of persistent storage with guarentees around durability, with some technologies able to act as in memory caches over equivalent disk based technologies. The technologies listed on this page span a number of different technology categories, including relational databases, Hadoop compatible filesystems and key value stores, and will also appear under the relevent technology category page where they exist.&lt;/p&gt; &lt;!-- Tech Category metadata --&gt; &lt;!-- Tech Vendor metadata --&gt; &lt;h2 id=&quot;further-information&quot;&gt;Further Information&lt;/h2&gt; &lt;p&gt;&lt;a href=&quot;https://www.forrester.com/report/The+Forrester+Wave+InMemory+Databases+Q1+2017/-/E-RES132143&quot;&gt;The Forrester Wave: In Memory Database, Q1 2017&lt;/a&gt; provides a view of “enterprise” in memory technologies, with a mix of NoSQL, enterprise RDBMS and and dedicated in memory relational technologies, however the list is limited and includes some technologies that aren’t in memory at all. It’s available from Oracle &lt;a href=&quot;http://www.oracle.com/us/corporate/analystreports/forrester-imdb-wave-2017-3616348.pdf&quot;&gt;here&lt;/a&gt;&lt;/p&gt; &lt;p&gt;There is also a list of in memory databases on Wikipedia &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_in-memory_databases&quot;&gt;here&lt;/a&gt;, however it does not clearly distinguish between the different types of databases.&lt;/p&gt; &lt;h2 id=&quot;in-memory-relational-databases&quot;&gt;In Memory Relational Databases&lt;/h2&gt; &lt;p&gt;There are a wide range of Relational Databases that operate entirely in memory, but with the ability to persist data to disk and provide durability guarantees:&lt;/p&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;MemSQL&lt;/td&gt; &lt;td&gt;Distributed in memory relational database, with wire compatibility with MySQL and support for row and columnar storage, and a free community edition - &lt;a href=&quot;http://www.memsql.com/&quot;&gt;http://www.memsql.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;SAP HANA&lt;/td&gt; &lt;td&gt;In memory relational DBMS primarily focused on accelerating SAP applications - &lt;a href=&quot;https://www.sap.com/products/hana.html&quot;&gt;https://www.sap.com/products/hana.html&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;VoltDB&lt;/td&gt; &lt;td&gt;Scale out in memory relational from Mike Stonebraker, with open source community edition - &lt;a href=&quot;https://www.voltdb.com/&quot;&gt;https://www.voltdb.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;EXASOL&lt;/td&gt; &lt;td&gt;In memory MPP database with columnar compression and SQL support - &lt;a href=&quot;http://www.exasol.com/&quot;&gt;http://www.exasol.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Oracle TimesTen&lt;/td&gt; &lt;td&gt;In memory relational database that can also act as a cache over Oracle Database - &lt;a href=&quot;https://www.oracle.com/database/timesten-in-memory-database/index.html&quot;&gt;https://www.oracle.com/database/timesten-in-memory-database/index.html&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-ignite&quot;&gt;GridGain/Apache Ignite&lt;/a&gt;&lt;/td&gt; &lt;td&gt;In memory relational database that also supports in memory filesystem and key value stores&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;MapD&lt;/td&gt; &lt;td&gt;In memory, column store, SQL relational database that runs on GPUs - &lt;a href=&quot;https://www.mapd.com/&quot;&gt;https://www.mapd.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Kinetica&lt;/td&gt; &lt;td&gt;Distributed in memory relational database that runs on GPUs - &lt;a href=&quot;https://www.kinetica.com&quot;&gt;https://www.kinetica.com&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;All the big enterprise relational databases now have (or are starting to add) in memory capabilities, including IBM DB2, IBM PureData, SQL Server, Oracle Database and Teradata.&lt;/p&gt; &lt;p&gt;And a number of databases support in-memory only storage engines (for example MySQL), however these generally don’t provide persistent storage.&lt;/p&gt; &lt;h2 id=&quot;in-memory-hadoop-compatible-filesystems&quot;&gt;In Memory Hadoop Compatible Filesystems&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/alluxio/&quot;&gt;Alluxio&lt;/a&gt;&lt;/td&gt; &lt;td&gt;In memory (HDFS compatible) distributed filesystem, with support for tiering data onto persistent storage&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-ignite&quot;&gt;GridGain/Apache Ignite&lt;/a&gt;&lt;/td&gt; &lt;td&gt;In memory (HDFS compatible) distributed filesystem that also supports in memory relational database and key value stores&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;See out &lt;a href=&quot;/tech-categories/hadoop-compatible-filesystems/&quot;&gt;Hadoop Compatible Filesystems&lt;/a&gt; for more information on Hadoop Compatible Filesystems.&lt;/p&gt; &lt;h2 id=&quot;in-memory-nosql-key-value-stores&quot;&gt;In Memory NoSQL Key Value Stores&lt;/h2&gt; &lt;p&gt;Many NoSQL Key Value stores operated entirely in memory. These technologies aren’t a focus for us, but include Redis, Memcached, HazelCast, EhCache, Riak KV, Aerospike, Oracle Coherance, Infinispan / JBoss Data Grid and Pivotal Gemfire / Apache Geode.&lt;/p&gt; &lt;h2 id=&quot;in-memory-embeddable-databases&quot;&gt;In Memory Embeddable Databases&lt;/h2&gt; &lt;p&gt;A range of in memory databases are also available that can be embedded into custom applications. Again, these technologies aren’t a focus for us, but Baeldung has a good list of Java options from April 2017 &lt;a href=&quot;http://www.baeldung.com/java-in-memory-databases&quot;&gt;here&lt;/a&gt;. Alternatives are also available for .Net (e.g. inmemory.net) and embedded systems (e.g. FairCom or Raima)&lt;/p&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/tech-categories/in-memory-databases/</guid> </item> <item><title>The Mid Week News - 06/09/2017</title><link>http://ondataengineering.net/blog/2017/09/06/the-mid-week-news/</link><pubDate>Wed, 06 Sep 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;Although it’s a quiet week this week, we’re still got time for the news… &lt;!--more--&gt;&lt;/p&gt; &lt;p&gt;Technology updates (details are on the relevant technology pages):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;No new releases this week, but I’ve added more links to the &lt;a href=&quot;/technologies/apache-spark&quot;&gt;Spark&lt;/a&gt; 2.2 and &lt;a href=&quot;/technologies/apache-solr&quot;&gt;Solr&lt;/a&gt; 6.6 release information&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Technology news:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Facebook have &lt;a href=&quot;https://code.facebook.com/posts/357056558062811/logdevice-a-distributed-data-store-for-logs/&quot;&gt;posted about LogDevice&lt;/a&gt;, their distributed log data store, due to be open sourced later this year. Along with DistributedLog (Twitter), Pulsar (Yahoo) and BookKeeper (also Yahoo), it feels like the open source technologies in our &lt;a href=&quot;/tech-categories/streaming-data-stores/&quot;&gt;streaming data stores&lt;/a&gt; category are starting to multiply.&lt;/li&gt; &lt;li&gt;Analytics on video (and image and audio) sources is an interesting area (here I go again) that I’d like to come back to at some point, but in the meantime, from Amit Baghel via InfoQ, a post on &lt;a href=&quot;https://www.infoq.com/articles/video-stream-analytics-opencv&quot;&gt;using OpenCV, Kafka and Spark to do video stream analysis&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Following Confluent’s KSQL announcement last week, &lt;a href=&quot;https://data-artisans.com/blog/flink-streaming-sql-ksql-stream-processing&quot;&gt;Data Artisans’ thoughts and comparison&lt;/a&gt; to &lt;a href=&quot;/technologies/apache-flink/&quot;&gt;Flink&lt;/a&gt; SQL&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://www.theregister.co.uk/2017/08/30/open_source_ml_and_ai/&quot;&gt;Thoughts&lt;/a&gt; from The Register on machine learning, open source and the current skills gap&lt;/li&gt; &lt;li&gt;Interesting &lt;a href=&quot;https://beam.apache.org/blog/2017/08/28/timely-processing.html&quot;&gt;post&lt;/a&gt; on window processing in &lt;a href=&quot;/technologies/apache-beam/&quot;&gt;Apache Beam&lt;/a&gt; that’s a good introduction to the subject&lt;/li&gt; &lt;/ul&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/blog/2017/09/06/the-mid-week-news/</guid> </item> <item><title>The Plan For This Week - 04/09/2017</title><link>http://ondataengineering.net/blog/2017/09/04/the-plan-for-this-week/</link><pubDate>Mon, 04 Sep 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;Good morning, and welcome back.&lt;/p&gt; &lt;p&gt;This week we will mostly be looking at in memory databases, grids and whatever else they want to call themselves. If I come across some interesting technologies I’ll try and knock out a couple of technology summaries, but my guess is that most of this week will be spent reading to try and get my head around this space.&lt;/p&gt; &lt;p&gt;So news on Wednesday, a technology category page and associated thoughts on Friday, and maybe a technology summary or two somewhere along the way.&lt;/p&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/blog/2017/09/04/the-plan-for-this-week/</guid> </item> <item><title>Thoughts on Time Series Databases</title><link>http://ondataengineering.net/blog/2017/09/01/thoughts-on-time-series-databases/</link><pubDate>Fri, 01 Sep 2017 08:00:00 +0100</pubDate> <description> &lt;p&gt;It feels like it’s been a bit of a rush this week (probably because I lost a day due to public holidays), but let’s quickly summarise what we’ve learnt this week about &lt;a href=&quot;/tech-categories/time-series-databases/&quot;&gt;Time Series Databases&lt;/a&gt; &lt;!--more--&gt;&lt;/p&gt; &lt;p&gt;Firstly, before you go any further, read &lt;a href=&quot;https://blog.outlyer.com/top10-open-source-time-series-databases&quot;&gt;Steven Acreman’s post&lt;/a&gt; from the Outlyer blog where he reviews a number of time series databases, provides some interesting commentary, and provides a link to his detailed analysis including some benchmark timing. And while you’reo outside the safe confines of this site, can I recommend DB Engines’ &lt;a href=&quot;https://db-engines.com/en/ranking/time+series+dbms&quot;&gt;list of time series databases&lt;/a&gt; (and their site in general).&lt;/p&gt; &lt;p&gt;So, first things first, what are time series databases and why might we be interested in them. Fundamentally, they’re databases optimised for storing point in time metrics and aggregating them by a range of dimensions (commonly called tags) to generate pretty graphs and support a range of analytics. Generally what you’re looking for is deviations from the norm, which suggests something interesting is happening in your sources, or you’re looking at trends over time. And with metrics you’re talking about potentially huge volumes of data, so we’re looking for databases that both store huge volumes of metrics efficiently on disk and can handle the ingest rates that we might through at it.&lt;/p&gt; &lt;p&gt;And why might we be interested in them? Well firstly because time series metrics are (and always have been) a big part of analytical systems (think financial transactions, invoices, call detail records and now the internet of things, and the functional similarities between time series databases and OLAP cube / star schema technologies), but also because one of the key use cases for this data (monitoring of infrastructure and applications) is a capability that we need for the infrastructure and applications in our analytical systems, and that’s before we start to talk about data quality and how we might track and manage data quality metrics. So for the analytical systems we build, we’re probably as much a consumer of this sort of analytics as we are a provider. We’ll come back and talk more about monitoring and data quality in the future, as they’re both huge topics.&lt;/p&gt; &lt;p&gt;So you want a time series database? What are the options…&lt;/p&gt; &lt;p&gt;Firstly, if you’re looking for a commercial option they there are some good ones. &lt;a href=&quot;/technologies/influxdb/&quot;&gt;InfluxDB&lt;/a&gt; seems to be the market leader, but there are some good alternatives as well, and a number of these have open source versions. TimescaleDB is an interesting one to call out, as this is a plugin to PostgreSQL to add time series data storage, which gives you a PostgreSQL database that supports both relational and time series data, potentially making this an interesting technology choice for star schema like use cases.&lt;/p&gt; &lt;p&gt;If you have a &lt;a href=&quot;/tech-categories/nosql-wide-column-stores/&quot;&gt;NoSQL Wide Column Stores&lt;/a&gt; already, then there are a number of open source options for leveraging these. &lt;a href=&quot;/technologies/opentsdb/&quot;&gt;OpenTSDB&lt;/a&gt; which runs over &lt;a href=&quot;/technologies/apache-hbase/&quot;&gt;HBase&lt;/a&gt; is tried and tested, but there are others that run over &lt;a href=&quot;/technologies/apache-cassandra/&quot;&gt;Cassandra&lt;/a&gt; and Google Cloud Bigtable, as well as one (Chronix) that runs over Solr. Warp 10 is an interesting one to call out in this space, as a time series database over HBase that also supports geo co-ordinates.&lt;/p&gt; &lt;p&gt;And there are also a range of open source technologies that implement their own datastores. RRDtool is the grandfather of time series databases, being created in 1999, &lt;a href=&quot;/technologies/druid/&quot;&gt;Druid&lt;/a&gt; we’ve talked about before, and both Facebook and Netflix have very high performance in memory solutions (Beringei and Atlas) that are probably way over the top for anyone else.&lt;/p&gt; &lt;p&gt;And then there are a bunch of full stack solutions, which I’ve lumped into this technology category page as well for the time being. Firstly, infrastructure/application monitoring stacks that include capabilities for hoovering up metrics, visualising these and alerting on them. Secondly, IoT stacks, which do much the same I guess, but differentiate themselves in some way I don’t understand yet. We’ll come back to these in the future…&lt;/p&gt; &lt;p&gt;And that will, I think, do for the week. Apologies this post is slightly late, but that’s life for you.&lt;/p&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/blog/2017/09/01/thoughts-on-time-series-databases/</guid> </item> <item><title>Time Series Databases</title><link>http://ondataengineering.net/tech-categories/time-series-databases/</link><pubDate>Fri, 01 Sep 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;Databases optimised for storing very large numbers of metrics and allowing these to be aggregated and analysed. Metrics are usually organised by measurements or metric names and one or more tags (e.g. to represent a server or instance). Many implement their own data storage layers, however many also run over external databases, typically NoSQL wide data stores. Use cases traditionally focus on monitoring infrastructure and applications or more recently IoT use cases, but analytics over any timestamped data is fair game.&lt;/p&gt; &lt;!-- Tech Category metadata --&gt; &lt;!-- Tech Vendor metadata --&gt; &lt;h2 id=&quot;further-information&quot;&gt;Further Information&lt;/h2&gt; &lt;p&gt;DB Engines maintain a list of time series databases along with their current popularity: &lt;a href=&quot;https://db-engines.com/en/ranking/time+series+dbms&quot;&gt;https://db-engines.com/en/ranking/time+series+dbms&lt;/a&gt;&lt;/p&gt; &lt;p&gt;From Steven Acreman on the Outlyer blog, a review of Time Series Databases from August 2016, some interesting thoughts, and a detailed analysis Google spreadsheet: &lt;a href=&quot;https://blog.outlyer.com/top10-open-source-time-series-databases&quot;&gt;https://blog.outlyer.com/top10-open-source-time-series-databases&lt;/a&gt;&lt;/p&gt; &lt;h2 id=&quot;open-source-over-external-data-stores&quot;&gt;Open Source over external data stores&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/opentsdb/&quot;&gt;OpenTSDB&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Time Series DB that runs over Apache HBase&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;KairosDB&lt;/td&gt; &lt;td&gt;Fork of OpenTSDB that runs over Apache Cassandra - &lt;a href=&quot;https://kairosdb.github.io/&quot;&gt;https://kairosdb.github.io/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Chronix&lt;/td&gt; &lt;td&gt;Time Series DB that runs over Apache Solr - &lt;a href=&quot;http://www.chronix.io/&quot;&gt;http://www.chronix.io/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Heroic&lt;/td&gt; &lt;td&gt;Time Series DB from Spotify based on Bigtable/Cassandra, and Elasticsearch - &lt;a href=&quot;https://github.com/spotify/heroic&quot;&gt;https://github.com/spotify/heroic&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Blueflood&lt;/td&gt; &lt;td&gt;Time Series DB over Cassandra from Rackspace - &lt;a href=&quot;http://blueflood.io/&quot;&gt;http://blueflood.io/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Warp 10&lt;/td&gt; &lt;td&gt;Geo Time Series DB that also geo co-ordinates and/or elevation alongside timestamps that runs over HBase and Kafka - &lt;a href=&quot;http://www.warp10.io/&quot;&gt;http://www.warp10.io/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Newts&lt;/td&gt; &lt;td&gt;Time Series DB over Cassandra - &lt;a href=&quot;http://opennms.github.io/newts/&quot;&gt;http://opennms.github.io/newts/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;open-source-using-custom-storage&quot;&gt;Open Source using custom storage&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;RRDtool&lt;/td&gt; &lt;td&gt;Open source data logging and graphing for time series data, originally created in 1999 - &lt;a href=&quot;https://oss.oetiker.ch/rrdtool/&quot;&gt;https://oss.oetiker.ch/rrdtool/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/druid&quot;&gt;Druid&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Runs over HDFS/S3 and supports real time aggregations of streaming data&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;DalmatinerDB&lt;/td&gt; &lt;td&gt;High performance Time Series DB written in Erlang and based on Riak Core that runs over ZFS - &lt;a href=&quot;https://dalmatiner.io/&quot;&gt;https://dalmatiner.io/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Beringei&lt;/td&gt; &lt;td&gt;In memory Time Series DB from Facebook - &lt;a href=&quot;https://github.com/facebookincubator/beringei&quot;&gt;https://github.com/facebookincubator/beringei&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Atlas&lt;/td&gt; &lt;td&gt;In memory Time Series DB from Netflix - &lt;a href=&quot;https://github.com/Netflix/atlas/wiki/Overview&quot;&gt;https://github.com/Netflix/atlas/wiki/Overview&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;SiriDB&lt;/td&gt; &lt;td&gt;Open source Time Series DB - &lt;a href=&quot;http://siridb.net/&quot;&gt;http://siridb.net/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Akumuli&lt;/td&gt; &lt;td&gt;C++ Time Series DB that can be used as an embedded library - &lt;a href=&quot;http://akumuli.org/&quot;&gt;http://akumuli.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Gnocchi&lt;/td&gt; &lt;td&gt;Open source Time Series DB that was spun off from the OpenStack Ceilometer project - &lt;a href=&quot;http://gnocchi.xyz/&quot;&gt;http://gnocchi.xyz/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;commercial-open-source&quot;&gt;Commercial Open Source&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/influxdb/&quot;&gt;InfluxDB&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Implemented in Go, with commercial and cloud versions also available&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Axibase&lt;/td&gt; &lt;td&gt;Time Series DB built on HDFS, with a commercial Enterprise edition available - &lt;a href=&quot;https://axibase.com/&quot;&gt;https://axibase.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Riak TS &lt;/td&gt; &lt;td&gt;Time Series DB built on the core of Riak KV, and available in a number of commercial editions - &lt;a href=&quot;http://basho.com/products/riak-ts/&quot;&gt;http://basho.com/products/riak-ts/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;TimescaleDB&lt;/td&gt; &lt;td&gt;Plugin to PostgreSQL to add time series data storage - &lt;a href=&quot;https://www.timescale.com/&quot;&gt;https://www.timescale.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;commercial-closed-source&quot;&gt;Commercial Closed Source&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;MachBase&lt;/td&gt; &lt;td&gt;Commercial Time Series DB previously known as InfiniFlux - &lt;a href=&quot;http://www.infiniflux.com/machbase/&quot;&gt;http://www.infiniflux.com/machbase/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;KDB+&lt;/td&gt; &lt;td&gt;Time Series DB from KX Systems that used heavily in financial organisations - &lt;a href=&quot;https://kx.com/discover/#time-series-database&quot;&gt;https://kx.com/discover/#time-series-database&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;monitoring-stacks-open-source&quot;&gt;Monitoring Stacks (open source)&lt;/h2&gt; &lt;p&gt;The following stacks support monitoring infrastructure and applications, with connectors to import metrics from a number of sources:&lt;/p&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Graphite&lt;/td&gt; &lt;td&gt;Three tier stack consisting of Whisper (simple time series database, graphite-web (a graph/dashboard UI) and Carbon (for ingestion of data)- &lt;a href=&quot;https://graphiteapp.org/&quot;&gt;https://graphiteapp.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Prometheus&lt;/td&gt; &lt;td&gt;Open source monitoring solution that includes a time series database and alerting; part of the Cloud Native Computing Foundation - &lt;a href=&quot;https://prometheus.io/&quot;&gt;https://prometheus.io/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Hawkular&lt;/td&gt; &lt;td&gt;Open source monitoring solution over Cassandra with alerting and visualisation capabilities, backed by RedHat - &lt;a href=&quot;http://www.hawkular.org/&quot;&gt;http://www.hawkular.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;NetData&lt;/td&gt; &lt;td&gt;Local in memory metrics dashboards for monitoring servers and applications, with the ability to forward metrics to downstream time series dbs - &lt;a href=&quot;https://my-netdata.io/&quot;&gt;https://my-netdata.io/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Icinga&lt;/td&gt; &lt;td&gt;Commercial support available - &lt;a href=&quot;https://www.icinga.com/&quot;&gt;https://www.icinga.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;monitoring-stacks-as-a-service&quot;&gt;Monitoring Stacks (as a service)&lt;/h2&gt; &lt;p&gt;If you’re looking for a time series database to handle monitoring and management of infrastructure and applications, there are also a number of cloud based services you could consider:&lt;/p&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;AWS CloudWatch&lt;/td&gt; &lt;td&gt;Collects and tracks metrics for AWS services, with support for custom metrics - &lt;a href=&quot;https://aws.amazon.com/cloudwatch/&quot;&gt;https://aws.amazon.com/cloudwatch/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Outlyer&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.outlyer.com/&quot;&gt;https://www.outlyer.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;VMWare Wavefront&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.wavefront.com/&quot;&gt;https://www.wavefront.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;VividCortex&lt;/td&gt; &lt;td&gt;Specialist database performance metrics monitoring - &lt;a href=&quot;https://www.vividcortex.com/&quot;&gt;https://www.vividcortex.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;SignalFX&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://signalfx.com&quot;&gt;https://signalfx.com&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Circonus&lt;/td&gt; &lt;td&gt;Also available for installation on premises - &lt;a href=&quot;https://www.circonus.com&quot;&gt;https://www.circonus.com&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Datadog&lt;/td&gt; &lt;td&gt;Available for free for up to 5 hosts - &lt;a href=&quot;https://www.datadoghq.com/&quot;&gt;https://www.datadoghq.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Librato&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.librato.com/&quot;&gt;https://www.librato.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;ServerDensity&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.serverdensity.com/&quot;&gt;https://www.serverdensity.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;iot-stacks&quot;&gt;IoT Stacks&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;TempoIQ&lt;/td&gt; &lt;td&gt;Commercial IoT collection, storage and analytics service - &lt;a href=&quot;https://www.tempoiq.com/&quot;&gt;https://www.tempoiq.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;SiteWhere&lt;/td&gt; &lt;td&gt;Commercial open source IoT platform built over MongoDB/HBase/InfluxDB - &lt;a href=&quot;http://www.sitewhere.org/&quot;&gt;http://www.sitewhere.org/&lt;/a&gt; / &lt;a href=&quot;http://www.sitewhere.com/&quot;&gt;http://www.sitewhere.com/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/tech-categories/time-series-databases/</guid> </item> <item><title>InfluxDB</title><link>http://ondataengineering.net/technologies/influxdb/</link><pubDate>Thu, 31 Aug 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;A time series database implemented in Go available in both open source and enterprise editions. Each data point consists of a metric name (measurement), a UNIX nano timestamp, a set of tag key value pairs, and a set of value key value pairs, with the combination of measurement and tag keys refered to as a series. Data is stored in a custom time series index (TSI) engine which supports very large numbers of series allowing for huge cardinalities of tag and value keys. Queries are written in InfluxQL (a varient of SQL), which includes support for creating and managing databases and series, listing series metadata (including measurements, tag keys and values and field keys), managing queries, writing the results of queries back into InfluxDB into a new series, a range of analytical SQL functions including aggregations (e.g. sum, count, spread, stddev), selections (e.g. first, last, percentile, sample) and transformations (e.g. ceiling, derivative, moving_average), and support for registering continuous queries that are run automatically and periodically within a database to create aggregate tables. Also supports retention policies for the automatic deletion of historic data, basic authentication and authorisation (at the database level), HTTPS connections, service plugins that allow data to be written to InfluxDB in alternative protocols (with out of the box support for UDP, Graphite, CollectD, Prometheus and OpenTSDB protocols), snapshot backups, statistics and diagnostic information, and an HTTP API and CLI for writing and querying data. Available as an open source version (under an MIT licence but limited to a single node), and as two commercial products - InfluxEnterprise (with support for clustering, access control and incremental backups) and InfluxCloud (InfluxEnterprise as a cloud based service). Originally created in 2013, and is part of the open source TICK suite along with Telegraf (ingestion of data), Chronograf (admin UI and visualisation) and Kapacitor (streaming analytics and actions).&lt;/p&gt; &lt;!-- Tech Category metadata --&gt; &lt;h2&gt;Technology Information&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Commercial Open Source&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Last Updated&lt;/td&gt;&lt;td&gt;August 2017 - v1.3&lt;/td&gt;&lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;hr /&gt; &lt;h2 id=&quot;release-history&quot;&gt;Release History&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;version&lt;/td&gt; &lt;td&gt;release date&lt;/td&gt; &lt;td&gt;release links&lt;/td&gt; &lt;td&gt;release comment&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1.4&lt;/td&gt; &lt;td&gt;tbc&lt;/td&gt; &lt;td&gt;tbc&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://www.influxdata.com/blog/influxdb-now-supports-prometheus-remote-read-write-natively/&quot;&gt;Prometheus compatible API&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://www.influxdata.com/time-series-platform/influxdb/&quot;&gt;https://www.influxdata.com/time-series-platform/influxdb/&lt;/a&gt; - homepage&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://www.influxdata.com/time-series-platform/&quot;&gt;https://www.influxdata.com/time-series-platform/&lt;/a&gt; - TICK platform overview&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://www.influxdata.com/products/editions/&quot;&gt;https://www.influxdata.com/products/editions/&lt;/a&gt; - comparison of the different editions&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://docs.influxdata.com/influxdb/latest/&quot;&gt;https://docs.influxdata.com/influxdb/latest/&lt;/a&gt; - documentation&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/influxdata/influxdb&quot;&gt;https://github.com/influxdata/influxdb&lt;/a&gt; - source code&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;news&quot;&gt;News&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://www.influxdata.com/blog/&quot;&gt;https://www.influxdata.com/blog/&lt;/a&gt; - InfluxData blog&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://docs.influxdata.com/influxdb/latest/about_the_project/releasenotes-changelog/&quot;&gt;https://docs.influxdata.com/influxdb/latest/about_the_project/releasenotes-changelog/&lt;/a&gt; - current release versions&lt;/li&gt; &lt;/ul&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/technologies/influxdb/</guid> </item> <item><title>The Mid Week News - 30/08/2017</title><link>http://ondataengineering.net/blog/2017/08/30/the-mid-week-news/</link><pubDate>Wed, 30 Aug 2017 07:45:00 +0100</pubDate> <description> &lt;p&gt;Right, time for this weeks news… &lt;!--more--&gt;&lt;/p&gt; &lt;p&gt;Technology updates (details are on the relevant technology pages):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;We’ve only just covered it, but &lt;a href=&quot;/technologies/apache-beam/&quot;&gt;Beam&lt;/a&gt; has already seen a point release to 2.1&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Technology news:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;A topical follow-up to our look at &lt;a href=&quot;/technologies/apache-spark/structured-streaming/&quot;&gt;Spark Structured Streaming&lt;/a&gt; last week - Confluent have &lt;a href=&quot;https://www.confluent.io/blog/ksql-open-source-streaming-sql-for-apache-kafka/&quot;&gt;just announced&lt;/a&gt; KSQ, which provides the ability to create continuously updated tables and new streams from data in Kafka using SQL&lt;/li&gt; &lt;li&gt;And on the subject of KSQL, &lt;a href=&quot;http://www.zdnet.com/article/ksql-kafka-gets-sql/&quot;&gt;an interview&lt;/a&gt; with Confluent on KSQL from ZDNet&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;http://vision.cloudera.com/search-engines-and-big-data-a-perfect-match-part-2/&quot;&gt;Part 2&lt;/a&gt; from Cloudera on the role &lt;a href=&quot;/tech-categories/analytical-search/&quot;&gt;Analytical Search&lt;/a&gt; capabilities play in big data analytics&lt;/li&gt; &lt;li&gt;LinkedIn have &lt;a href=&quot;https://engineering.linkedin.com/blog/2017/08/open-sourcing-kafka-cruise-control&quot;&gt;opened sourced Cruise Control&lt;/a&gt;, their technology for monitoring, balancing and managing their &lt;a href=&quot;/technologies/apache-kafka&quot;&gt;Apache Kafka&lt;/a&gt; clusters&lt;/li&gt; &lt;li&gt;An &lt;a href=&quot;https://www.theregister.co.uk/2017/08/25/bet365_to_buy_basho_release_code/&quot;&gt;update&lt;/a&gt; from The Register on Basho - it looks like Bet365 are planning to buy up Basho’s assets (including Riak), and open source all of their products&lt;/li&gt; &lt;li&gt;A &lt;a href=&quot;https://www.confluent.io/blog/blogthe-simplest-useful-kafka-connect-data-pipeline-in-the-world-or-thereabouts-part-2/&quot;&gt;follow up&lt;/a&gt; from Confluent on how to get started with &lt;a href=&quot;/technologies/apache-kafka/kafka-connect/&quot;&gt;Kafka Connect&lt;/a&gt;&lt;/li&gt; &lt;li&gt;A &lt;a href=&quot;https://databricks.com/blog/2017/08/24/anthology-of-technical-assets-on-apache-sparks-structured-streaming.html&quot;&gt;big dump&lt;/a&gt; from DataBricks on useful links and information relating to &lt;a href=&quot;/technologies/apache-spark/structured-streaming/&quot;&gt;Spark Structured Streaming&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;/technologies/hue/&quot;&gt;Hue&lt;/a&gt; is gaining the ability to do ad-hoc imports to HDFS from databases via &lt;a href=&quot;/technologies/apache-sqoop&quot;&gt;Sqoop&lt;/a&gt; in it’s next release (4.1), building on the existing functionality to be able to import flat files&lt;/li&gt; &lt;li&gt;A two part series from Hortonworks (&lt;a href=&quot;https://hortonworks.com/blog/update-hive-tables-easy-way/&quot;&gt;part 1&lt;/a&gt; and &lt;a href=&quot;https://hortonworks.com/blog/update-hive-tables-easy-way-2/&quot;&gt;part 2&lt;/a&gt;) on doing &lt;a href=&quot;/technologies/apache-hive/&quot;&gt;Hive&lt;/a&gt; table updates, including how to do type 1, 2 and 3 slowly changing dimensions in Hive&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://www.infoq.com/presentations/contracts-streaming-microservices&quot;&gt;A presentation&lt;/a&gt; from Gwen Shapira at Confluent (via InfoQ) on schema management and the role of schema management tools such as the Confluent Schema Registry (bundled with &lt;a href=&quot;/technologies/confluent-open-source/&quot;&gt;Confluent Open Source&lt;/a&gt;) and Hortonworks Schema Registry (/technologies/schema-registry/)&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://mapr.com/blog/5-ways-business-cultivate-data-driven-culture/&quot;&gt;Thoughts&lt;/a&gt; from the MapR blog on how Businesses Can Cultivate a Data-Driven Culture. Normally I’d avoid these articles like the plague, but this one seems to keep it simple and the advice sensible.&lt;/li&gt; &lt;/ul&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/blog/2017/08/30/the-mid-week-news/</guid> </item> <item><title>OpenTSDB</title><link>http://ondataengineering.net/technologies/opentsdb/</link><pubDate>Wed, 30 Aug 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;A time series database built on top of Apache HBase (with support for Google BigTable and Apache Cassandra recently added). Each data point consists of a metric name, a UNIX timestamp, a value (either integer or floating point) and a set of key value pair tags, where the tags define the potentially aggregations required. Data is stored with one row per metric, tag combination and hour, with all data points for that hour stored in that row under different column qualifiers based on the timestamp, allowing for more efficient in memory aggregations. Supports the recording (but not generation) of pre-aggregated data that will be used to accelerate queries, annotations (short text strings associated with timestamps and optionally time series that represent events), the organisation of metrics and tags into hierarchical trees, and the generation of statistics relating to performance, however currently does not support incrementing counters. Consists of a Time Series Daemon (TSD) (that exposes a Telnet RPC and HTTP JSON REST APIs and a simple web based UI for querying data) and a CLI (including the ability to batch import data), with each TSD opperating independantly of each other with no master or shared state allowing for horizontal scalability over a single underlying database. Supports a range of plugins, including the ability to support different deserialisation and authentication for HTTP REST calls, emmission of meta data (metrics, tags and annotations) to a search engine, real time publishing of data points to another destination and support for other RPC protocols. Open sourced on GitHub under both an LGPLv2.1+ and GPLv3+ licence, with development started in 2010, and has been adopted but a number of large organisations including MapR, Yahoo, Tumblr and ebay.&lt;/p&gt; &lt;!-- Tech Category metadata --&gt; &lt;h2&gt;Technology Information&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Open Source - Quiet&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Last Updated&lt;/td&gt;&lt;td&gt;August 2017 - v2.3&lt;/td&gt;&lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2&gt;Related Technologies&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt;&lt;td&gt;Is packaged by&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;/technologies/mapr-monitoring/&quot;&gt;MapR Monitoring&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;http://opentsdb.net/&quot;&gt;http://opentsdb.net/&lt;/a&gt; - homepage&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;http://opentsdb.net/docs/build/html/index.html&quot;&gt;http://opentsdb.net/docs/build/html/index.html&lt;/a&gt; - documentation&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://www.slideshare.net/HBaseCon/ecosystem-session-6&quot;&gt;https://www.slideshare.net/HBaseCon/ecosystem-session-6&lt;/a&gt; - introductory presentation&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;news&quot;&gt;News&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/OpenTSDB/opentsdb/releases&quot;&gt;https://github.com/OpenTSDB/opentsdb/releases&lt;/a&gt; - release history&lt;/li&gt; &lt;/ul&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/technologies/opentsdb/</guid> </item> <item><title>The Plan For This Week - 29/08/2017</title><link>http://ondataengineering.net/blog/2017/08/29/the-plan-for-this-week/</link><pubDate>Tue, 29 Aug 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;Yes - it’s a Tuesday and not a Monday. Apologies, forgot to say on Friday that it was a public holiday in the UK this Monday, and therefore they’d be no update. I hope you’ll forgive me.&lt;/p&gt; &lt;p&gt;So, a shorter week this week. The plan is to look at event series databases, both for analysing external event data, but also as a capability for analysing event logs and metrics that our analytical systems may generate.&lt;/p&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/blog/2017/08/29/the-plan-for-this-week/</guid> </item> <item><title>The Week That Was - 25/08/2017</title><link>http://ondataengineering.net/blog/2017/08/25/the-week-that-was/</link><pubDate>Fri, 25 Aug 2017 07:45:00 +0100</pubDate> <description> &lt;p&gt;So, a bit of a mixed bag this week, but what did we look at.&lt;/p&gt; &lt;p&gt;We started with three technologies summaries from Jeff Moszuti, looking at &lt;a href=&quot;/technologies/apache-kylin/&quot;&gt;Apache Kylin&lt;/a&gt;, &lt;a href=&quot;/technologies/apache-beam/&quot;&gt;Apache Beam&lt;/a&gt; and &lt;a href=&quot;/technologies/rex-ray/&quot;&gt;Dell EMC REX-Ray&lt;/a&gt;. We then finished up the week by looking at &lt;a href=&quot;/technologies/zenko/&quot;&gt;Zenko&lt;/a&gt; and &lt;a href=&quot;/technologies/apache-spark/structured-streaming/&quot;&gt;Spark Structured Streaming&lt;/a&gt;. &lt;!--more--&gt;&lt;/p&gt; &lt;p&gt;We last looked at OLAP cube technologies with &lt;a href=&quot;/technologies/druid&quot;&gt;Druid&lt;/a&gt;, which like &lt;a href=&quot;/technologies/apache-kylin/&quot;&gt;Apache Kylin&lt;/a&gt; is tightly integrated with the Hadoop ecosystem. Unlike Druid however, Kylin doesn’t introduce new data storage, instead leveraging Hive and HBase, which potentially makes it more palatable if you don’t want more data management engines running on your cluster. What it lacks however is Druid’s support for combining streaming and batch data. And Kylin is an Apache project (if that’s important to you), however given Hortonwork’s recent commitment to Druid, it wouldn’t surprise me if Druid was heading that way as well.&lt;/p&gt; &lt;p&gt;I have to say I’m a little conflicted around &lt;a href=&quot;/technologies/apache-beam/&quot;&gt;Apache Beam&lt;/a&gt;. It aims to introduce a standard model for batch and stream processing that a range of different technologies can then support. The model feels ok, certainly Data Artisans liked it enough to completely rework the Flink API to be more aligned (&lt;a href=&quot;https://data-artisans.com/blog/why-apache-beam&quot;&gt;details here&lt;/a&gt;), but I’m struggling to see the value. I have to admin to be slightly biased against abstractions like these - my feeling is that they’re great in concept, however there’s always a cost associated with an abstraction layer, either in not being able to achieve something easily because you’re fighting the abstraction, or in performance overheads from the translations involved, and switching between back end runners will never be as easy as you hope. And does anyone really care about being able to take batch/streaming code and easily migrate it between different back end execution engines? I can see what’s in it for Google - having Google Cloud Dataflow being the de-facto runner for running Beam code in the cloud puts them in a good position. Perhaps I’m just being cynical.&lt;/p&gt; &lt;p&gt;I’ve not much to say about &lt;a href=&quot;/technologies/rex-ray/&quot;&gt;Dell EMC REX-Ray&lt;/a&gt;, but hopefully we’ll look more at containerisation technologies and how they support persistent storage and how you might use them for analytics at some point in the future.&lt;/p&gt; &lt;p&gt;We looked at Scality’s open sourced S3 Server back when we were looking at &lt;a href=&quot;/tech-categories/object-stores/&quot;&gt;object store&lt;/a&gt;. Just as a reminder, it was a Node based single process (i.e. not clustered or distributed) S3 compatible object store service, that could either proxy requests onto &lt;a href=&quot;/technologies/scality-ring/&quot;&gt;Scality Ring&lt;/a&gt; or &lt;a href=&quot;/technologies/amazon-s3/&quot;&gt;Amazon S3&lt;/a&gt;, or could serve them from local or in memory storage. Useful for development and test, but probably not anything significant in production. It seems like it was pretty successful (they keep banging on about how it was downloaded over 600,000 times), and they’re therefore trying to make something more significant of it.&lt;/p&gt; &lt;p&gt;The result is that they’ve renamed S3 Server into &lt;a href=&quot;/technologies/zenko/cloudserver/&quot;&gt;Zenko Cloudserver&lt;/a&gt;, and made it part of a new much larger open source project called &lt;a href=&quot;/technologies/zenko/&quot;&gt;Zenko&lt;/a&gt;. At the moment all Zenko does is provide a Docker Swarm stack definition that allows multiple Cloudservers to be clustered behind a load balancer, but what they have planned is more interesting. First up is support for more backend services, including Azure Blob Storage and potentially Google Storage, also support for other container management systems such as Kubernetes, and then new new sub-projects - Backbeat (which will provide policy-based data workflows such as replication or migration) and Clueso (which will provide object metadata search and analytics using Apache Spark). The aim is to provide a gateway into multiple back end object stores with federation capabilities over the top. Sounds like a nice idea, and probably one to track.&lt;/p&gt; &lt;p&gt;And finally, I’ve refreshed all our &lt;a href=&quot;/technologies/apache-spark/&quot;&gt;Apache Spark&lt;/a&gt; technology summaries (including all the sub-projects) to make sure they’re up to date (which is odd given there’s only been one point release since they were written). The big bit that was missing was information on &lt;a href=&quot;/technologies/apache-spark/structured-streaming/&quot;&gt;Spark Structured Streaming&lt;/a&gt;, which provides the ability to run a DataFrame or SQL query over streaming data (using the standard &lt;a href=&quot;/technologies/apache-spark/spark-sql/&quot;&gt;Spark SQL&lt;/a&gt; APIs), and have the result calculated and then updated/maintained as new data comes in. The result being that I think it’s probably time we took a deeper look into streaming technologies and understood the differences. It does feel like Spark is moving forward at a pace however, both the original Spark RDD API, and the original Spark Streaming API appear to now be effectively in maintenance mode, DataFrames being the future across both, including for machine learning with &lt;a href=&quot;/technologies/apache-spark/mllib/&quot;&gt;MLLib&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Right - enough for next week. See you after the weekend.&lt;/p&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/blog/2017/08/25/the-week-that-was/</guid> </item> <item><title>Structured Streaming</title><link>http://ondataengineering.net/technologies/apache-spark/structured-streaming/</link><pubDate>Fri, 25 Aug 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;Extension to the Spark SQL DataFrame API to allow Spark SQL queries to be executed over streams of data, with the engine continuously updating and maintaining the result as new data arrives. Uses the full Spark SQL engine (including the Catalyst optimiser), and supports end-to-end exactly-once semantics via checkpointing when sources have sequential offsets. Supports aggregations over sliding event-time windows, including support for late data and watermarking. Introduced in Spark 2.0 with a production release in Sprint 2.2.&lt;/p&gt; &lt;!-- Tech Category metadata --&gt; &lt;h2&gt;Technology Information&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Sub-Project&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Parent Project&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;/technologies/apache-spark/&quot;&gt;Apache Spark&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Last Updated&lt;/td&gt;&lt;td&gt;August 2017&lt;/td&gt;&lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://spark.apache.org/docs/latest/structured-streaming-programming-guide.html&quot;&gt;https://spark.apache.org/docs/latest/structured-streaming-programming-guide.html&lt;/a&gt; - documentation&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://databricks.com/blog/2016/07/28/structured-streaming-in-apache-spark.html&quot;&gt;https://databricks.com/blog/2016/07/28/structured-streaming-in-apache-spark.html&lt;/a&gt; - intro blog post&lt;/li&gt; &lt;/ul&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/technologies/apache-spark/structured-streaming/</guid> </item> <item><title>Zenko CloudServer</title><link>http://ondataengineering.net/technologies/zenko/cloudserver/</link><pubDate>Thu, 24 Aug 2017 07:45:00 +0100</pubDate> <description> &lt;p&gt;Open source object storage server based on the S3 compatible API from Scality RING, with the ability to proxy requests to other S3 services (with support for Scality RING and Amazon S3), or to store data in persistent local storage or transient in-memory storage, with support for concurrent use of multiple backends. Supports broad compatibility with the Amazon S3 API including bucket and object versioning, and has been tested against a range of Amazon S3 utilities, CLIs and SDKs. Written in Node.js, available as a Docker container, and can be deployed and used independantly of the rest of Zenko. Metadata and (locally persisted) data is managed by a data and metadata daemon (dmd), with the option to use a shared remote daemon (for example when running a cluster of CloudServers). First released in June 2016 as S3 Server before becoming being renamed to CloudServer and becoming part of Zenko in July 2017. Hosted on GitHub under an Apache 2.0 licence.&lt;/p&gt; &lt;!-- Tech Category metadata --&gt; &lt;h2&gt;Technology Information&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt;&lt;td&gt;Other Names&lt;/td&gt;&lt;td&gt;S3 Server, Scality S3 Server&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Sub-Project&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Parent Project&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;/technologies/zenko/&quot;&gt;Zenko&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Last Updated&lt;/td&gt;&lt;td&gt;August 2017&lt;/td&gt;&lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;http://www.zenko.io/cloudserver/&quot;&gt;http://www.zenko.io/cloudserver/&lt;/a&gt; - homepage&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;http://s3-server.readthedocs.io/en/latest/&quot;&gt;http://s3-server.readthedocs.io/en/latest/&lt;/a&gt; - documentation&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/scality/S3&quot;&gt;https://github.com/scality/S3&lt;/a&gt; - GitHub repo&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;http://www.scality.com/about-us/press/scality-announces-s3-server/&quot;&gt;http://www.scality.com/about-us/press/scality-announces-s3-server/&lt;/a&gt; - original press release&lt;/li&gt; &lt;/ul&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/technologies/zenko/cloudserver/</guid> </item> <item><title>Zenko</title><link>http://ondataengineering.net/technologies/zenko/</link><pubDate>Thu, 24 Aug 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;A distributed and resilient Amazon S3 API compatible object storage gateway / proxy. Current scope is a Docker Swarm stack of a cluster of Zenko CloudServer (previously S3 Server) instances with nginx as a front end load balancer, which provide the S3 compatible API backed by Scality RING or Amazon S3, as well as persistent local storage or transient in-memory storage via a shared CloudServer data and metadata daemon. Roadmap includes support for Azure Blob Storage, support for other container management systems such as Kubernetes, plus two new sub-projects - Backbeat (which will provide policy-based data workflows such as replication or migration) and Clueso (which will provide object metadata search and analytics using Apache Spark). First released in July 2017, and hosted on GitHub under an Apache 2.0 licence.&lt;/p&gt; &lt;!-- Tech Category metadata --&gt; &lt;h2&gt;Technology Information&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt;&lt;td&gt;Other Names&lt;/td&gt;&lt;td&gt;Zenko Multi-Cloud Data Controller&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Sub-Project&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Parent Project&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;/technologies/zenko/&quot;&gt;Zenko&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Last Updated&lt;/td&gt;&lt;td&gt;August 2017&lt;/td&gt;&lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2&gt;Sub-projects&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt; Zenko&amp;nbsp;&gt;&amp;nbsp; &lt;a href=&quot;http://ondataengineering.net/technologies/zenko/cloudserver/&quot;&gt;Zenko CloudServer&lt;/a&gt; &lt;/td&gt; &lt;td&gt;Open source object storage server based on the S3 compatible API from Scality RING, with the ability to proxy requests to other S3 services (with support for Scality RING and Amazon S3), or to store data in persistent local storage or transient in-memory storage, with support for concurrent use of multiple backends. Supports broad compatibility with the Amazon S3 API including bucket and object versioning, and has been tested against a range of Amazon S3 utilities, CLIs and SDKs. Written in Node.js, available as a Docker container, and can be deployed and used independantly of the rest of Zenko. Metadata and (locally persisted) data is managed by a data and metadata daemon (dmd), with the option to use a shared remote daemon (for example when running a cluster of CloudServers). First released in June 2016 as S3 Server before becoming being renamed to CloudServer and becoming part of Zenko in July 2017. Hosted on GitHub under an Apache 2.0 licence.&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;http://www.zenko.io/&quot;&gt;http://www.zenko.io/&lt;/a&gt; - homepage&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;http://zenko.readthedocs.io/en/latest/index.html&quot;&gt;http://zenko.readthedocs.io/en/latest/index.html&lt;/a&gt; - documentation&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;http://www.zenko.io/blog/zenko-rollout-plan/&quot;&gt;http://www.zenko.io/blog/zenko-rollout-plan/&lt;/a&gt; - Roadmap&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/scality/S3&quot;&gt;https://github.com/scality/S3&lt;/a&gt; - GitHub repo&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;http://www.scality.com/products/zenko-multi-cloud-data-controller/&quot;&gt;http://www.scality.com/products/zenko-multi-cloud-data-controller/&lt;/a&gt; - Scality Zenko product page&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;http://www.scality.com/about-us/press/scality-zenko-multi-cloud-controller/&quot;&gt;http://www.scality.com/about-us/press/scality-zenko-multi-cloud-controller/&lt;/a&gt; - original press release&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;news&quot;&gt;News&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;http://www.zenko.io/blog/&quot;&gt;http://www.zenko.io/blog/&lt;/a&gt; - blog&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/scality/S3/releases&quot;&gt;https://github.com/scality/S3/releases&lt;/a&gt; - release history&lt;/li&gt; &lt;/ul&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/technologies/zenko/</guid> </item> <item><title>REX-Ray</title><link>http://ondataengineering.net/technologies/rex-ray/</link><pubDate>Wed, 23 Aug 2017 07:45:00 +0100</pubDate> <description> &lt;p&gt;Open source, storage management solution providing containers to access external storage systems outside of the container's host thus enabling stateful applications such as databases to be run inside containers. Allows applications to save data beyond the lifecycle of a container and provides high-availability features for container restarts across hosts. Operates as a command line interface and lightweight agent that can be integrated into container runtimes (e.g. Docker, Mesos) to provide storage functionality such as volume creation, attaching, and mounting processes as well as container orchestrators (e.g. Docker Swarm, Kubernetes, or Marathon for Mesos) to attach a volume to a new host and resume state in the event of a host failure. Built on top of the libStorage library (also from Dell EMC), provides a storage plugin framework that allows access to multiple storage providers and platforms (Amazon EBS, EFS, S3FS, Dell EMC ScaleIO, Isilon etc.) and a flexible architecture that allows it to be deployed in a standalone, decentralised fashion on each container host or as a centralised service for easier management at large scale. Written in Go, open sourced under the Apache 2.0 licence, hosted on GitHub, with development led by Dell EMC. Has not yet reached a v1.0 milestone, but is still under active development.&lt;/p&gt; &lt;!-- Tech Category metadata --&gt; &lt;h2&gt;Technology Information&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt;&lt;td&gt;Vendors&lt;/td&gt;&lt;td&gt;Dell EMC&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Open Source - Active&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Last Updated&lt;/td&gt;&lt;td&gt;August 2017 - 0.9&lt;/td&gt;&lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://rexray.codedellemc.com/&quot;&gt;https://rexray.codedellemc.com/&lt;/a&gt; - Home&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://rexray.readthedocs.io/&quot;&gt;https://rexray.readthedocs.io/&lt;/a&gt; - Documentation&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/codedellemc/rexray/&quot;&gt;https://github.com/codedellemc/rexray/&lt;/a&gt; - Code&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/u/rexray/&quot;&gt;https://hub.docker.com/u/rexray/&lt;/a&gt; - Docker volume plugin for various storage providers&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;news&quot;&gt;News&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/codedellemc/rexray/releases/&quot;&gt;https://github.com/codedellemc/rexray/releases/&lt;/a&gt; - details of releases&lt;/li&gt; &lt;/ul&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/technologies/rex-ray/</guid> </item> <item><title>The Mid Week News - 23/08/2017</title><link>http://ondataengineering.net/blog/2017/08/23/the-mid-week-news/</link><pubDate>Wed, 23 Aug 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;After last weeks monster update, it very slim pickings this week - two new technology releases and a couple of (semi) interesting blog posts… &lt;!--more--&gt;&lt;/p&gt; &lt;p&gt;Technology updates (details are on the relevant technology pages):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;/technologies/apache-hbase/&quot;&gt;Apache HBase&lt;/a&gt; is prepping for it’s big 2.0 release, with a second alpha release of 2.0 announced this week. The HBase page includes a link to a presentation with more information on the 2.0 release&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;/technologies/apache-knox/&quot;&gt;Apache Knox&lt;/a&gt; has hit 0.13, with support for some new serivces and a bunch of improvements&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Technology news:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The &lt;a href=&quot;https://www.confluent.io/blog/leveraging-power-database-unbundled/&quot;&gt;latest&lt;/a&gt; post from Confluent in their series on how Kafka (and similar tools) can fundamentally re-shape the way you think about your architecture and the way you manage data. Well worth a read, and I’ve got a feeling we’ll be talking more about this in the future.&lt;/li&gt; &lt;li&gt;A post from Hortonworks on &lt;a href=&quot;https://hortonworks.com/blog/data-science-workbench-data-scientists-need-one/&quot;&gt;why you need a Data Science Workbench&lt;/a&gt;. There’s not a huge amount of content, and the phrasing echos Cloudera’s new product, so I’m wondering why they’ve pulished this…&lt;/li&gt; &lt;/ul&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/blog/2017/08/23/the-mid-week-news/</guid> </item> <item><title>Apache Beam</title><link>http://ondataengineering.net/technologies/apache-beam/</link><pubDate>Tue, 22 Aug 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;Unified batch and streaming programming model to define portable data processing pipelines and execute these using a range of different engines. Originating from the Google Dataflow model, focuses on unifying both styles of processing by treating static data sets as streams (which happen to have a beginning and an end), while achieving data correctness and the ability to handle late-arriving data through a set of abstractions and concepts that give users control over estimated quality of arrived data (completeness), duration to wait for results (latency) and how much speculative/redundant computation to do (cost). Allows business logic, data characteristics and trade-off strategies to be defined via different programming languages through pluggable language SDKs (with out of the box support for Java and Python). Supports a range of pluggable runtime platforms through pipeline runners, with support for a direct runner (for development and testing pipelines in a non-distributed environment), Apache Apex, Flink, Spark, and (under development) Gearpump runners, and a Google Cloud Dataflow runner. Also supports a growing set of connectors that allow pipelines to read and write data to various data storage systems (IOs). An Apache project, opened sourced by Google in January 2016, graduated in January 2017, with a first stable release (2.0) in May 2017. Written in Java and Python and under active development with a large number of contributors including Google, data Artisans, Talend and PayPal.&lt;/p&gt; &lt;!-- Tech Category metadata --&gt; &lt;h2&gt;Technology Information&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt;&lt;td&gt;Other Names&lt;/td&gt;&lt;td&gt;Beam&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Vendors&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;/tech-vendors/apache/&quot;&gt;The Apache Software Foundation&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Commercial Open Source&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Last Updated&lt;/td&gt;&lt;td&gt;August 2017 - 2.1&lt;/td&gt;&lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;release-history&quot;&gt;Release History&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;version&lt;/td&gt; &lt;td&gt;release date&lt;/td&gt; &lt;td&gt;release links&lt;/td&gt; &lt;td&gt;release comment&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;2.1&lt;/td&gt; &lt;td&gt;2017-08-23&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=12319527&amp;amp;version=12340528&quot;&gt;release notes&lt;/a&gt;&lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://beam.apache.org&quot;&gt;https://beam.apache.org&lt;/a&gt; - product home page&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://beam.apache.org/documentation/&quot;&gt;https://beam.apache.org/documentation/&lt;/a&gt; - documentation&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://beam.apache.org/documentation/runners/capability-matrix/&quot;&gt;https://beam.apache.org/documentation/runners/capability-matrix/&lt;/a&gt; - defines capabilities of individual runners&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://cloud.google.com/blog/big-data/2016/05/why-apache-beam-a-google-perspective&quot;&gt;https://cloud.google.com/blog/big-data/2016/05/why-apache-beam-a-google-perspective&lt;/a&gt; - motivation behind Beam&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;news&quot;&gt;News&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://beam.apache.org/blog/&quot;&gt;https://beam.apache.org/blog/&lt;/a&gt; - blog&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://beam.apache.org/get-started/downloads/&quot;&gt;https://beam.apache.org/get-started/downloads/&lt;/a&gt; - details of releases&lt;/li&gt; &lt;/ul&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/technologies/apache-beam/</guid> </item> <item><title>Apache Kylin</title><link>http://ondataengineering.net/technologies/apache-kylin/</link><pubDate>Mon, 21 Aug 2017 07:45:00 +0100</pubDate> <description> &lt;p&gt;An open source distributed analytic engine built to support sub-second OLAP / star schema style queries using SQL on extremely large datasets on Hadoop. Data is read from a star schema data model in Hive to build a data cube of pre-calculated metrics by dimensions using MapReduce with the results stored in a key-value datastore (HBase). SQL queries can be submitted to the query engine, with results returned with sub-second latency if the required data exists in an HBase cube, otherwise the query is optionally routed back to its original source on Hadoop. Supports compression of large datasets by dictionary encoding cube data using a triple data structure, combination pruning and aggregation grouping of dimensions for efficient data storage, and uses approximation query capability (HyperLogLog) to estimate distinct items and TopN to answer top-k queries. Row keys are composed by dimension encoded values and HBase's fuzzy row filtering is performed directly on the storage nodes to implement low latency lookups. Simple additive and aggregation operations (sum, count or like) are also performed on the storage nodes using HBase coprocessors to provide efficient computational parallelism and minimise network latency. Uses Apache Calcite for SQL parsing and optimisation, comes with an ODBC driver, a JDBC driver and a REST API to integrate with third party business intelligence tools such as Tableau, Microsoft Excel and PowerBI. Includes a web interface and REST API for model building and cube design (with support for hierarchy, joint and derived dimensions), job management (full, incremental and streaming builds) and monitoring and permission management (providing security at a project or cube level). New beta features include building cubes from Kafka streaming data and cube building using Spark instead of MapReduce. Originally developed at Ebay, donated to the Apache Foundation in November 2014, graduating in November 2015, with a 1.0 release in September 2015, and still under active development. Commercial support available from Kyligence, who distribute their own product based on Kylin replacing HBase with a custom columnar storage engine (with cell level access control and integration with LDAP), along with a web based BI tool for self service analysis and a dashboard for Kylin cluster management.&lt;/p&gt; &lt;!-- Tech Category metadata --&gt; &lt;h2&gt;Technology Information&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt;&lt;td&gt;Other Names&lt;/td&gt;&lt;td&gt;Kylin&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Vendors&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;/tech-vendors/apache/&quot;&gt;The Apache Software Foundation&lt;/a&gt;, Kyligence&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Commercial Open Source&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Last Updated&lt;/td&gt;&lt;td&gt;August 2017 - 2.1.0&lt;/td&gt;&lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;http://kylin.apache.org&quot;&gt;http://kylin.apache.org&lt;/a&gt; - Kylin homepage&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;http://kylin.apache.org/docs20&quot;&gt;http://kylin.apache.org/docs20&lt;/a&gt; - Kylin documentation&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;http://www.ebaytechblog.com/2014/10/20/announcing-kylin-extreme-olap-engine-for-big-data&quot;&gt;http://www.ebaytechblog.com/2014/10/20/announcing-kylin-extreme-olap-engine-for-big-data&lt;/a&gt; - open source announcement&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;http://kyligence.io/products&quot;&gt;http://kyligence.io/products&lt;/a&gt; - Kylience Analytics Platform&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;http://manual.kyligence.io/v2.4/en&quot;&gt;http://manual.kyligence.io/v2.4/en&lt;/a&gt; - Kylience Analytics Platform documentation&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;news&quot;&gt;News&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;http://kylin.apache.org/blog&quot;&gt;http://kylin.apache.org/blog&lt;/a&gt; - Kylin blog&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;http://kylin.apache.org/download/&quot;&gt;http://kylin.apache.org/download/&lt;/a&gt; - list of recent versions&lt;/li&gt; &lt;/ul&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/technologies/apache-kylin/</guid> </item> <item><title>The Plan For This Week - 21/08/2017</title><link>http://ondataengineering.net/blog/2017/08/21/the-plan-for-this-week/</link><pubDate>Mon, 21 Aug 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;Something slightly different this week - I’ve got a bunch of technology summaries to put live, most of them from Jeff Moszuti (who contributed all the recent Mesos stuff), so we’re going to do a random week. Five technology summaries, with no relationship to each other and no overlying theme.&lt;/p&gt; &lt;p&gt;See you on Friday for the wrap-up…&lt;/p&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/blog/2017/08/21/the-plan-for-this-week/</guid> </item> <item><title>The Apache Big Data Project List</title><link>http://ondataengineering.net/blog/2017/08/18/the-apache-big-data-project-list/</link><pubDate>Fri, 18 Aug 2017 07:45:00 +0100</pubDate> <description> &lt;p&gt;It’s a day late, but the new and refreshed list of Apache technologies that I think are of interest to us is now live on the &lt;a href=&quot;/tech-vendors/apache/&quot;&gt;Apache Foundation&lt;/a&gt; vendor page. &lt;!--more--&gt;&lt;/p&gt; &lt;p&gt;There’s 98 technologies in total, which talks to the breadth of projects that the Apache Foundation now supports, and the range of (just one small slice of) technology options in the space we’re looking at. And just for reference, we have technology summaries and technology pages for 53 (at the time of writing) of these technologies if you want more information on them.&lt;/p&gt; &lt;p&gt;I’ve split the technologies up into some very broad categories, but I’m looking to refine these as we continue our journey through the technology categories that I think are of interest to us. If you’re reading this in the future, the categories on the Apache technologies page should link to technology category pages that provide an insight into available technologies across the open source and commercial space.&lt;/p&gt; &lt;p&gt;I think that’s probably all for this week - see you after the weekend.&lt;/p&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/blog/2017/08/18/the-apache-big-data-project-list/</guid> </item> <item><title>The Apache Software Foundation</title><link>http://ondataengineering.net/tech-vendors/apache/</link><pubDate>Fri, 18 Aug 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;The Apache Software Foundation is a non-profit organisation that supports a wide range of open source projects, including providing and mandating a standard governance model (including the use of the Apache license), holding all trademarks for project names and logos, and providing legal protection to developers. It was founded in 1999 and now oversees nearly 200 projects.&lt;/p&gt; &lt;!-- Tech Category metadata --&gt; &lt;h2&gt;Vendor Information&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt;&lt;td&gt;Other Names&lt;/td&gt;&lt;td&gt;Apache&lt;/td&gt;&lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;!-- Technology metadata --&gt; &lt;h2 id=&quot;analytical-query-capabilities&quot;&gt;Analytical Query Capabilities&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-hawq/&quot;&gt;HAWQ (Incubating)&lt;/a&gt;&lt;/td&gt; &lt;td&gt;A port of the Greenplum MPP database (which itself is based on PostgreSQL) to run over YARN and HDFS.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-tajo/&quot;&gt;Tajo&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Distributed analytical database engine supporting queries over data in HDFS, Amazon S3, Google Cloud Storage, OpenStack Swift and local storage, and querying over Postgres, HBase and Hive tables.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-kudu/&quot;&gt;Kudu&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Columnar storage technology for tables of structured data, supporting low latency reads, updates and deletes by primary key, as well as analytical column/table scans.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Quickstep (Incubating)&lt;/td&gt; &lt;td&gt;High performance database engine supporting SQL queries based on a University of Wisconsin-Madison project - &lt;a href=&quot;http://quickstep.apache.org/&quot;&gt;http://quickstep.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-hive/&quot;&gt;Hive&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Supports the execution of SQL queries over data in HDFS using MapReduce, Spark or Tez based on tables defined in the Hive Metastore&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-pig/&quot;&gt;Pig&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Technology for running analytical and data processing jobs written in Pig Latin against data in Hadoop using MapReduce, Tez and Spark&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;MRQL (Incubating)&lt;/td&gt; &lt;td&gt;Supports the execution of MRQL queries over data in Hadoop using MapReduce, Hama, Spark or Flink - &lt;a href=&quot;http://mrql.apache.org/&quot;&gt;http://mrql.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-impala/&quot;&gt;Impala (Incubating)&lt;/a&gt;&lt;/td&gt; &lt;td&gt;An MPP query engine that supports the execution of SQL queries over in HDFS, HBase, Kudu and S3 based on tables defined in the Hive Metastore&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-drill/&quot;&gt;Drill&lt;/a&gt;&lt;/td&gt; &lt;td&gt;An MPP query engine that supports queries over one or more underlying databases or datasets without first defining a schema and with the ability to join data from multiple datastores together.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Lens&lt;/td&gt; &lt;td&gt;Provides a federated view over multiple data stores using a single shared schema server based on the Hive Metastore - &lt;a href=&quot;http://lens.apache.org/&quot;&gt;http://lens.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-kylin/&quot;&gt;Kylin&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Supports the creation and querying of OLAP cubes on Hadoop, building cubes from star schema data in Hive into HBase, and then providing a SQL interface that queries across Hive and HBase as required - &lt;a href=&quot;http://kylin.apache.org/ &quot;&gt;http://kylin.apache.org/ &lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;analytical-search-capabilities&quot;&gt;Analytical Search Capabilities&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-solr/&quot;&gt;Solr&lt;/a&gt;&lt;/td&gt; &lt;td&gt;A search server built on Apache Lucene with a REST-like API for loading and searching data.&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;compute-cluster-management&quot;&gt;Compute Cluster Management&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-hadoop/yarn/&quot;&gt;Hadoop/YARN&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Resource management and job scheduling &amp;amp; monitoring for the Hadoop ecosystem.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-mesos/&quot;&gt;Mesos&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Resource management over large clusters of machines&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-myriad/&quot;&gt;Myriad (Incubating)&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Tool that allows YARN applications to run over Apache Mesos, allowing them to co-exist and share cluster resources.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-slider/&quot;&gt;Slider (Incubating)&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Application for deploying long running cluster applications on YARN, now effectively dead following the plan to add support for long running services directly into YARN&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Twill&lt;/td&gt; &lt;td&gt;Abstraction over YARN that reduces the complexity of developing distributed applications - &lt;a href=&quot;http://twill.apache.org/&quot;&gt;http://twill.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-aurora/&quot;&gt;Aurora&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Mesos framework for long-running services and cron jobs - &lt;aurora.apache.org&gt;&lt;/aurora.apache.org&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Helix&lt;/td&gt; &lt;td&gt;A framework for building long lived persistent distributed systems - &lt;a href=&quot;http://helix.apache.org/&quot;&gt;http://helix.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;REEF&lt;/td&gt; &lt;td&gt;A framework for developing distributed apps on top of cluster frameworks such as YARN or Mesos - &lt;a href=&quot;http://reef.apache.org/&quot;&gt;http://reef.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;data-formats&quot;&gt;Data Formats&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-avro/&quot;&gt;Avro&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Data serialisation framework that supports both messaging and data storage, primarily using a compact binary format but also supports a JSON format.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-parquet/&quot;&gt;Parquet&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Data serialisation framework that supports a columnar storage format to enable efficient querying of data.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Arrow&lt;/td&gt; &lt;td&gt;In-memory columnar data serialisation framework - &lt;a href=&quot;http://arrow.apache.org/&quot;&gt;http://arrow.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;CarbonData&lt;/td&gt; &lt;td&gt;Data serialisation framework that supports an indexed columnar storage format - &lt;a href=&quot;http://carbondata.apache.org/&quot;&gt;http://carbondata.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;ORC&lt;/td&gt; &lt;td&gt;Data serialisation framework that supports a columnar storage format to enable efficient querying of data - &lt;a href=&quot;https://orc.apache.org/&quot;&gt;https://orc.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;data-movement&quot;&gt;Data Movement&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-flume/&quot;&gt;Flume&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Specialist technology for the continuous movement of data using a set of independent agents connected together into pipelines.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-nifi/&quot;&gt;Nifi&lt;/a&gt;&lt;/td&gt; &lt;td&gt;General purpose technology for the movement of data between systems, including the ingestion of data into an analytical platform.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-sqoop/&quot;&gt;Sqoop&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Specialist technology for moving bulk data between Hadoop and structured (relational) databases.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;ManifoldCF&lt;/td&gt; &lt;td&gt;Framework for replicating data from content repositories to analytical search technologies - &lt;a href=&quot;http://manifoldcf.apache.org/&quot;&gt;http://manifoldcf.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;data-processing&quot;&gt;Data Processing&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-hadoop/map-reduce/&quot;&gt;Hadoop/MapReduce&lt;/a&gt;&lt;/td&gt; &lt;td&gt;A data transformation and aggregation technology proven at extreme scale that works on key value pairs&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-spark/&quot;&gt;Spark&lt;/a&gt;&lt;/td&gt; &lt;td&gt;A high performance general purpose distributed data processing engine based on directed acyclic graphs that primarily runs in memory, but can spill to disk if required&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-tez/&quot;&gt;Tez&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Data processing framework based on Directed Acyclic Graphs (DAGs), that runs natively on YARN and was designed to be a replacement for the use of MapReduce within Hadoop analytical tools&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Gobblin (Incubating)&lt;/td&gt; &lt;td&gt;Framework for managing big data integration, including replication, organization and lifecycle management - &lt;a href=&quot;http://gobblin.apache.org/&quot;&gt;http://gobblin.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-crunch/&quot;&gt;Crunch&lt;/a&gt;&lt;/td&gt; &lt;td&gt;An abstraction layer over MapReduce (and now Spark) that provides a high level Java API for creating data transformation pipelines&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;graph-technologies&quot;&gt;Graph Technologies&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-giraph/&quot;&gt;Giraph&lt;/a&gt;&lt;/td&gt; &lt;td&gt;An iterative, highly scalable graph processing system built on top of MapReduce and based on Pregel&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-hama/&quot;&gt;Hama&lt;/a&gt;&lt;/td&gt; &lt;td&gt;A general purpose BSP (Bulk Synchronous Parallel) processing engine inspired by Pregel and DistBelief that runs over Mesos or YARN.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Commons RDF (0)&lt;/td&gt; &lt;td&gt;Commons library for working with RDF data - &amp;lt;commons.apache.org/proper/commons-rdf/&amp;gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Jena&lt;/td&gt; &lt;td&gt;Framework for developing Semantic Web and Linked Data applications in Java - &lt;a href=&quot;http://jena.apache.org/&quot;&gt;http://jena.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Rya (Incubating)&lt;/td&gt; &lt;td&gt;RDF triple store built on Apache Accumulo - &lt;a href=&quot;http://rya.apache.org/&quot;&gt;http://rya.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;S2Graph (Incubating)&lt;/td&gt; &lt;td&gt;OLTP graph database built on Apache HBase - &lt;a href=&quot;https://s2graph.incubator.apache.org/&quot;&gt;https://s2graph.incubator.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;TinkerPop&lt;/td&gt; &lt;td&gt;Graph compute framework for transactional and analytical use cases that’s integrated with a number of graph database technologies - &lt;a href=&quot;http://tinkerpop.apache.org&quot;&gt;http://tinkerpop.apache.org&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-spark/graphx/&quot;&gt;Spark/GraphX&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Spark library for processing graphs and running graph algorithms&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;hadoop-and-related-technologies&quot;&gt;Hadoop and Related Technologies&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-hadoop/&quot;&gt;Hadoop&lt;/a&gt;&lt;/td&gt; &lt;td&gt;A distributed storage and compute platform consisting of a distributed filesystem (HDFS), a cluster resource management layer (YARN), and MapReduce, a solution built on HDFS and YARN for massive scale parallel processing of data&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-bigtop/&quot;&gt;Bigtop&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Apache open source distribution of Hadoop&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-ambari/&quot;&gt;Ambari&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Platform for installing, managing and monitoring Apache Hadoop clusters&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-atlas/&quot;&gt;Atlas&lt;/a&gt;&lt;/td&gt; &lt;td&gt;A metadata and data governance solution for Hadoop.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-knox/&quot;&gt;Knox&lt;/a&gt;&lt;/td&gt; &lt;td&gt;A stateless gateway for the Apache Hadoop ecosystem that provides perimeter security&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-ranger/&quot;&gt;Ranger&lt;/a&gt;&lt;/td&gt; &lt;td&gt;A centralised security framework for managing access to data in Hadoop&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-sentry/&quot;&gt;Sentry&lt;/a&gt;&lt;/td&gt; &lt;td&gt;A centralised security framework for managing access to data in Hadoop&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Eagle&lt;/td&gt; &lt;td&gt;Security and performance monitoring solution for Hadoop, donated by eBay - &lt;a href=&quot;http://eagle.apache.org/&quot;&gt;http://eagle.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-falcon/&quot;&gt;Falcon&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Data feed management system for Hadoop, although no longer appears under development and is deprecated from HDP.&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;in-memory-technologies&quot;&gt;In Memory Technologies&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-ignite/&quot;&gt;Ignite&lt;/a&gt;&lt;/td&gt; &lt;td&gt;A distributed in-memory data fabric/grid, supporting a range of different use cases and capabilities&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Geode&lt;/td&gt; &lt;td&gt;In memory data management platform, born of Pivotal Gemfire - &lt;a href=&quot;http://geode.apache.org/&quot;&gt;http://geode.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Mnemonic (Incubating)&lt;/td&gt; &lt;td&gt;Hybrid memory / storage object model framework - &lt;a href=&quot;http://mnemonic.apache.org/&quot;&gt;http://mnemonic.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;machine-learning-technologies&quot;&gt;Machine Learning Technologies&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-spark/mllib/&quot;&gt;Spark/MLLib&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Spark library for running Machine Learning algorithms&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-mahout/&quot;&gt;Mahout&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Machine learning technology comprising of a Scala based linear algebra engine (codenamed Samsara) with an R-like DSL/API that runs over Spark (with experimental support for H2O and Flink)&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;MADlib&lt;/td&gt; &lt;td&gt;Machine learning in SQL for PostgreSQL, Greenplum and Apache HAWQ - &lt;a href=&quot;http://madlib.apache.org/&quot;&gt;http://madlib.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;OpenNLP&lt;/td&gt; &lt;td&gt;Machine learning based toolkit for the processing of natural language text - &lt;a href=&quot;http://opennlp.apache.org/&quot;&gt;http://opennlp.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;SAMOA (Incubating)&lt;/td&gt; &lt;td&gt;Machine learning framework that runs over multiple stream processing engines including Storm, Flink and Samza - &lt;a href=&quot;http://samoa.apache.org/&quot;&gt;http://samoa.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;SINGA (Incubating)&lt;/td&gt; &lt;td&gt;Framework for developing machine learning libraries over a range of hardware - &lt;a href=&quot;https://singa.apache.org/&quot;&gt;https://singa.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;SystemML&lt;/td&gt; &lt;td&gt;Delarative machine learning over local, Spark or MapReduce execution engines - &lt;a href=&quot;http://systemml.apache.org/&quot;&gt;http://systemml.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;nosql-wide-column-stores&quot;&gt;NoSQL Wide Column Stores&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-accumulo/&quot;&gt;Accumulo&lt;/a&gt;&lt;/td&gt; &lt;td&gt;NoSQL wide-column datastore based on Google BigTable that runs on Hadoop and HDFS&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-cassandra/&quot;&gt;Cassandra&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Distributed wide-column datastore based on Amazon Dynamo and Google BigTable&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-hbase/&quot;&gt;HBase&lt;/a&gt;&lt;/td&gt; &lt;td&gt;NoSQL wide-column datastore based on Google BigTable that runs on Hadoop and HDFS&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Fluo&lt;/td&gt; &lt;td&gt;Implementation of Google Percolator for maintaining aggregations in Accumulo - &lt;a href=&quot;https://fluo.apache.org/&quot;&gt;https://fluo.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Omid (Incubating)&lt;/td&gt; &lt;td&gt;ACID transaction support over MVCC key/value NoSQL datastores with support for Apache Hbase - &lt;a href=&quot;http://omid.apache.org/&quot;&gt;http://omid.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Tephra (Incubating)&lt;/td&gt; &lt;td&gt;ACID transaction support over Apache Hbase, used by Tigon and Apache Phoenix - &lt;a href=&quot;http://tephra.apache.org/&quot;&gt;http://tephra.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;oltp-databases&quot;&gt;OLTP Databases&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-phoenix/&quot;&gt;Phoenix&lt;/a&gt;&lt;/td&gt; &lt;td&gt;An OLTP SQL query engine over Apache HBase tables that supports a subset of SQL 92 (including joins), and comes with a JDBC driver.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Trafodion (Incubating)&lt;/td&gt; &lt;td&gt;OLTP on Hadoop solution based on Tandom NoStop database IP with commercial support from Esgyn - &lt;a href=&quot;https://trafodion.incubator.apache.org/&quot;&gt;https://trafodion.incubator.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;streaming-analytics&quot;&gt;Streaming Analytics&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-storm/&quot;&gt;Storm&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Specialised distributed stream processing technology based on a single record (not micro batch) model with at least once processing semantics.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-flink/&quot;&gt;Flink&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Specialised stream processing technology inspired by the Google Data Flow model based on a single record (not micro batch) model, with exactly once processing semantics (for supported sources and sinks) via light weight checkpointing and support for batch processing.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-spark/spark-streaming/&quot;&gt;Spark/Streaming&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Spark library for continuous stream processing, that allows stream and batch processing (including Spark SQL and MLlib operations) to be combined&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-beam&quot;&gt;Beam&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Model and SDKs for running batch and streaming workflows over Apex, Flink, Spark and Google Dataflow - &lt;a href=&quot;https://beam.apache.org/&quot;&gt;https://beam.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-apex/&quot;&gt;Apex&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Data transformation engine based on Directed Acyclic Graph (DAG) flows configured through a Java API or via JSON that runs over YARN and HDFS with native support for both micro-batch streaming and batch uses cases&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Heron&lt;/td&gt; &lt;td&gt;The stream processing framework that Twitter built after Storm, with a Storm compatible API&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Samza&lt;/td&gt; &lt;td&gt;Stream processing framework built on Kafka and YARN - &lt;a href=&quot;http://samza.apache.org/&quot;&gt;http://samza.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Bahir&lt;/td&gt; &lt;td&gt;A suite of streaming connectors for Spark and Flink, including support for Akka, MQTT, Twitter and ZeroMQ - &lt;a href=&quot;http://bahir.apache.org/&quot;&gt;http://bahir.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Gearpump (Incubating)&lt;/td&gt; &lt;td&gt;Real-time streaming engine based on the micro-service Actor model - &lt;a href=&quot;http://gearpump.apache.org/&quot;&gt;http://gearpump.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;streaming-data-stores&quot;&gt;Streaming Data Stores&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-kafka/&quot;&gt;Kafka&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Technology for buffering and storing real-time streams of data between producers and consumers, with a focus on high throughput at low latency.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;DistributedLog&lt;/td&gt; &lt;td&gt;Distributed log service from Twitter supporting durability, replication and strong consistency built over Apache BookKeeper&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Pulsar&lt;/td&gt; &lt;td&gt;Distributed pub-sub messaging from Yahoo, with persistent message storage based on Apache BookKeeper&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;BookKeeper&lt;/td&gt; &lt;td&gt;Distributed log storage service from Yahoo&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;workflow-management&quot;&gt;Workflow Management&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-oozie/&quot;&gt;Oozie&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Technology for managing workflows of jobs on Hadoop clusters.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Airflow (Incubating)&lt;/td&gt; &lt;td&gt;Workflow automation and scheduling system that can be used to author and manage data pipelines - &lt;a href=&quot;http://airflow.apache.org/&quot;&gt;http://airflow.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;other-technologies&quot;&gt;Other Technologies&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-datafu/&quot;&gt;DataFu (Incubating)&lt;/a&gt;&lt;/td&gt; &lt;td&gt;A set of libraries for working with data in Hadoop, consisting of two sub-projects - DataFu Pig (a set of Pig User Defined Functions) and DataFu Hourglass (a framework for incremental processing using MapReduce).&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-zookeeper/&quot;&gt;ZooKeeper&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Service for managing coordination (e.g. configuration information and synchronisation) of distributed and clustered systems.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;AsterixDB&lt;/td&gt; &lt;td&gt;Scalable “Big Data Management System” - &lt;a href=&quot;https://asterixdb.apache.org/&quot;&gt;https://asterixdb.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Chukwa&lt;/td&gt; &lt;td&gt;Specialist technology for the ingestion of continuous data flows into an Hadoop cluster, and the subsequent management and analysis of the data - &lt;a href=&quot;https://chukwa.apache.org/ &quot;&gt;https://chukwa.apache.org/ &lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Edgent (Incubating)&lt;/td&gt; &lt;td&gt;Stream processing programming model and lightweight runtime to execute analytics at devices on the edge or at the gateway, previously known as Quarks - &lt;a href=&quot;http://edgent.apache.org/&quot;&gt;http://edgent.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Gora&lt;/td&gt; &lt;td&gt;ORM with support for a range of NoSQL, Search and Hadoop data formats - &lt;a href=&quot;http://gora.apache.org/&quot;&gt;http://gora.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;MetaModel&lt;/td&gt; &lt;td&gt;Technology for reading and writing database metadata with connectors for a wide range of databases - &lt;a href=&quot;http://metamodel.apache.org/&quot;&gt;http://metamodel.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Toree (Incubating)&lt;/td&gt; &lt;td&gt;Framework to allow interactive applications to communicate with a remote Spark cluster - &lt;a href=&quot;http://toree.apache.org/&quot;&gt;http://toree.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Curator&lt;/td&gt; &lt;td&gt;A set of Java libraries that make using Apache ZooKeeper much easier - &lt;a href=&quot;http://curator.apache.org/&quot;&gt;http://curator.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-calcite/&quot;&gt;Calcite&lt;/a&gt;&lt;/td&gt; &lt;td&gt;A framework for building SQL based data access capabilities, supporting a SQL parser and validator and tools for the transformation and (cost based) optimisation of SQL expression trees.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-livy/&quot;&gt;Livy (Incubating)&lt;/a&gt;&lt;/td&gt; &lt;td&gt;A service that allows Spark jobs (pre-compiled JARs) or code snippets (Scala or Python) to be executed by remote systems over a REST API or via clients for Java, Scala and Python.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-superset/&quot;&gt;Superset (Incubating)&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Web based tool for interactive exploration for OLAP style data, supporting interactive drag and drop querying, composable dashboards and a SQL workspace (SQL Lab).&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-zeppelin/&quot;&gt;Zeppelin&lt;/a&gt;&lt;/td&gt; &lt;td&gt;A web based notebook for interactive data analytics.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Commons Compress&lt;/td&gt; &lt;td&gt;Suite of Java libraries for working with a range of compression and packaging formats - &lt;a href=&quot;https://commons.apache.org/proper/commons-compress/&quot;&gt;https://commons.apache.org/proper/commons-compress/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Commons CSV&lt;/td&gt; &lt;td&gt;Suite of Java libraries for workng with CSV files - &lt;a href=&quot;https://commons.apache.org/proper/commons-csv/&quot;&gt;https://commons.apache.org/proper/commons-csv/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Griffin (Incubating)&lt;/td&gt; &lt;td&gt;Data Quality Service platform built on Apache Hadoop and Apache Spark - &lt;a href=&quot;http://griffin.incubator.apache.org/&quot;&gt;http://griffin.incubator.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Tika&lt;/td&gt; &lt;td&gt;Toolkit for extracting text from a wide range of document formats - &lt;a href=&quot;http://tika.apache.org/&quot;&gt;http://tika.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;UIMA&lt;/td&gt; &lt;td&gt;Framework for unstructured data analysis - &lt;a href=&quot;http://uima.apache.org/&quot;&gt;http://uima.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://www.apache.org/&quot;&gt;https://www.apache.org/&lt;/a&gt; - homepage&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://www.apache.org/foundation/how-it-works.html&quot;&gt;https://www.apache.org/foundation/how-it-works.html&lt;/a&gt; - information on the foundation&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;news&quot;&gt;News&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;http://apache.org/foundation/mailinglists.html#foundation-announce&quot;&gt;http://apache.org/foundation/mailinglists.html#foundation-announce&lt;/a&gt; - the Apache Foundation announcements mailing list&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://blogs.apache.org/&quot;&gt;https://blogs.apache.org/&lt;/a&gt;; &lt;a href=&quot;https://blogs.apache.org/planet/feed/entries/rss&quot;&gt;https://blogs.apache.org/planet/feed/entries/rss&lt;/a&gt; - The set of Apache Foundation blogs&lt;/li&gt; &lt;/ul&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/tech-vendors/apache/</guid> </item> <item><title>The Mid Week News - 16/08/2017</title><link>http://ondataengineering.net/blog/2017/08/16/the-mid-week-news/</link><pubDate>Wed, 16 Aug 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;Bumper week this week given we’ve been off for a while - let’s crack on… &lt;!--more--&gt;&lt;/p&gt; &lt;p&gt;Technology updates (details are on the relevant technology pages):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The &lt;a href=&quot;/technologies/apache-parquet&quot;&gt;Apache Parquet&lt;/a&gt; C++ library has hit 1.2&lt;/li&gt; &lt;li&gt;Confluent &lt;a href=&quot;/technologies/confluent-open-source/&quot;&gt;Open Source&lt;/a&gt; and &lt;a href=&quot;/technologies/confluent-enterprise&quot;&gt;Enterprise&lt;/a&gt; have hit 3.3&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;/technologies/apache-ignite&quot;&gt;Apache Ignite&lt;/a&gt; is up to 2.1&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;/technologies/apache-drill&quot;&gt;Apache Drill&lt;/a&gt; is up to 1.11&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;/technologies/apache-tez&quot;&gt;Apache Tez&lt;/a&gt; has hit 0.9&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;/technologies/apache-hive&quot;&gt;Apache Hive&lt;/a&gt; has seen 2.2 and 2.3 releases, with the 2.3 coming first. No idea what’s going on hear - if you can enlighten me please do!&lt;/li&gt; &lt;li&gt;There’s are also new links added to the &lt;a href=&quot;/technologies/cloudera-cdh/&quot;&gt;CDH&lt;/a&gt; 5.12, &lt;a href=&quot;/technologies/cloudera-director&quot;&gt;Cloudera Director&lt;/a&gt; 2.5, &lt;a href=&quot;/technologies/cloudera-data-science-workbench&quot;&gt;Cloudera Data Science Workbench&lt;/a&gt; 1.1, &lt;a href=&quot;/technologies/hue&quot;&gt;Hue&lt;/a&gt; 4, &lt;a href=&quot;/technologies/apache-kafka&quot;&gt;Kafka&lt;/a&gt; 0.11, &lt;a href=&quot;/technologies/apache-ignite&quot;&gt;Ignite&lt;/a&gt; 2.0 and &lt;a href=&quot;/technologies/apache-ambari&quot;&gt;Ambari&lt;/a&gt; 2.5 release entries from recent blog posts exploring the new functionality&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Technology news:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Apache Pulsar (&lt;a href=&quot;https://pulsar.incubator.apache.org/&quot;&gt;homepage&lt;/a&gt; has entered Apache incubation - looks like another potential Kafka alternative, this time from Yahoo. We’ll try and take a look at this next week.&lt;/li&gt; &lt;li&gt;It looks like &lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/Metastore+TLP+Proposal&quot;&gt;there are plans&lt;/a&gt; to split the &lt;a href=&quot;/technologies/apache-hive/hive-metastore/&quot;&gt;Hive Metastore&lt;/a&gt; off into it’s own top level Apache project&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;http://vision.cloudera.com/top-reasons-why-search-engines-and-big-data-go-hand-in-hand-part-1/&quot;&gt;Cloudera’s thoughts&lt;/a&gt; (part 1) on the role &lt;a href=&quot;/tech-categories/analytical-search/&quot;&gt;Analytical Search&lt;/a&gt; capabilities play in big data analytics&lt;/li&gt; &lt;li&gt;From DB-Engines, &lt;a href=&quot;https://db-engines.com/en/blog_post/71&quot;&gt;thoughts&lt;/a&gt; on time series databases&lt;/li&gt; &lt;li&gt;The Confluent blog has been busy, with a bunch of interesting posts &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://www.confluent.io/blog/simplest-useful-kafka-connect-data-pipeline-world-thereabouts-part-1/&quot;&gt;An introduction&lt;/a&gt; to creating a flows using &lt;a href=&quot;/technologies/apache-kafka/kafka-streams&quot;&gt;Kafka Streams&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://www.confluent.io/blog/apache-kafka-for-service-architectures/&quot;&gt;An excellent introduction&lt;/a&gt; to the architectural principles behind &lt;a href=&quot;/technologies/apache-kafka&quot;&gt;Kafka&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://www.confluent.io/blog/messaging-single-source-truth/&quot;&gt;Thoughts&lt;/a&gt; on the use of &lt;a href=&quot;/technologies/apache-kafka/&quot;&gt;Kafka&lt;/a&gt; as the single source of truth (including history) of your data&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;From The Morning Paper, &lt;a href=&quot;https://blog.acolyer.org/2017/08/11/automatic-database-management-system-tuning-through-large-scale-machine-learning/&quot;&gt;an article&lt;/a&gt; on how machine learning can optimise database tuning, which probably speaks to the complexity of tuning databases as much as anything else&lt;/li&gt; &lt;li&gt;AWS Glue is &lt;a href=&quot;https://aws.amazon.com/blogs/aws/launch-aws-glue-now-generally-available/&quot;&gt;now generally available&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Another &lt;a href=&quot;https://blog.knoldus.com/2017/07/21/kafka-streams-more-than-just-a-dumb-storage/&quot;&gt;useful introduction&lt;/a&gt; to &lt;a href=&quot;/technologies/apache-kafka/kafka-streams/&quot;&gt;Kafka Streams&lt;/a&gt;&lt;/li&gt; &lt;li&gt;From Cloudera, a &lt;a href=&quot;http://blog.cloudera.com/blog/2017/07/quicker-insight-into-apache-solr-and-collection-health/&quot;&gt;post&lt;/a&gt; on monitoring Solr with &lt;a href=&quot;/technologies/cloudera-manager/&quot;&gt;Cloudera Manager&lt;/a&gt;&lt;/li&gt; &lt;li&gt;And another from Cloudera, &lt;a href=&quot;http://blog.cloudera.com/blog/2017/07/implyr-r-interface-for-apache-impala/&quot;&gt;querying&lt;/a&gt; &lt;a href=&quot;/technologies/apache-impala/&quot;&gt;Impala&lt;/a&gt; from R&lt;/li&gt; &lt;li&gt;And one more from Cloudera, detailing &lt;a href=&quot;http://blog.cloudera.com/blog/2017/08/introducing-s3guard-s3-consistency-for-apache-hadoop/&quot;&gt;S3Guard&lt;/a&gt;, providing consistency when running &lt;a href=&quot;/technologies/apache-hadoop/hdfs/&quot;&gt;HDFS&lt;/a&gt; over Amazon S3&lt;/li&gt; &lt;/ul&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/blog/2017/08/16/the-mid-week-news/</guid> </item> <item><title>The Plan For This Week - 14/08/2017</title><link>http://ondataengineering.net/blog/2017/08/14/the-plan-for-this-week/</link><pubDate>Mon, 14 Aug 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;And we’re back from our short break.&lt;/p&gt; &lt;p&gt;The plan for this week is to publish the list of Apache technologies that I think are of interest to us. I know we’re meant to be working through technology categories at the moment, but I’ve had this list lying around for a while and it’s time to get it out of my notes and onto the site.&lt;/p&gt; &lt;p&gt;So no update tomorrow, news on Wednesday, Apache technology list on Thursday and some thoughts on Friday - aka back to business as usual.&lt;/p&gt; &lt;p&gt;And I’m still working on tidying up some bits and pieces on the site - I’ll try and summarise these as and when they’re ready.&lt;/p&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/blog/2017/08/14/the-plan-for-this-week/</guid> </item> <item><title>The Plan For The Next Three Weeks - 24/07/2017</title><link>http://ondataengineering.net/blog/2017/07/24/the-plan-for-next-three-weeks/</link><pubDate>Mon, 24 Jul 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;It’s time for me to take a short break, both to recharge and try and get ahead of the upcoming content for the site, but also to do some work on the site itself which is starting to accumulate a few to many bodges and hacks (and an exponentially increasing build time!)&lt;/p&gt; &lt;p&gt;It’ll be back in three weeks on Monday 14th August, and although there may be a few updates here and there between now and then, expect things to be generally quite.&lt;/p&gt; &lt;p&gt;Here’s hoping your having a nice summer wherever you are, and we’ll speak soon…&lt;/p&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/blog/2017/07/24/the-plan-for-next-three-weeks/</guid> </item> <item><title>Thoughts on Compute Cluster Managers</title><link>http://ondataengineering.net/blog/2017/07/21/thoughts-on-compute-cluster-management/</link><pubDate>Fri, 21 Jul 2017 08:00:00 +0100</pubDate> <description> &lt;p&gt;Let’s talk about compute clusters, and the management thereof, technologies that we’re snappily calling &lt;a href=&quot;/tech-categories/compute-cluster-managers/&quot;&gt;compute cluster managers&lt;/a&gt;… &lt;!--more--&gt;&lt;/p&gt; &lt;p&gt;I’m assuming we’re all happy with database and application clusters - persistent processes running across a set of machines that co-ordinate with each other to serve requests and do work. The keyword here being persistent - you install the software on all the nodes, configure everything up, start it and it runs (hopefully forever).&lt;/p&gt; &lt;p&gt;Compute clusters are slightly different, in that work is not done by persistent processes, but instead by transitory jobs that start up, do some data processing work and then go away again. Some technologies implement their own clustering - Spark for example has a standalone mode with a simple cluster manager, and Hadoop 1.x MapReduce would manage it’s own distributed processing across an HDFS cluster. Of course you could run multiple technologies (or maybe even multiple jobs in the same technology) on a single cluster, however they’re going to compete for resources and if you’re being too ambitious, overwhelm your hardware.&lt;/p&gt; &lt;p&gt;What therefore emerged over the last 10 years are compute cluster management technologies. Rather than every technology having to implement their own clustering, they can talk to a cluster manager, ask for a bunch of processes to be started up, and relax safe in the knowledge that the cluster manager is going to take care of all the hard work of starting and managing these for them. And the key thing about these is that they can be used by multiple technologies - a single cluster can handle the execution of multiple simultaneous jobs in multiple technologies, with the cluster manager performing resource management to ensure that these multiple workloads execute in a harmonious and collaborative way.&lt;/p&gt; &lt;p&gt;The first of these was &lt;a href=&quot;/technologies/apache-hadoop/yarn/&quot;&gt;Apache YARN&lt;/a&gt;, the big addition in Hadoop 2.0. Once YARN support was added to the common Hadoop data processing frameworks, this allowed multiple jobs in different technologies to run on your Hadoop cluster in a controlled and managed way under the oversight of the YARN resource manager.&lt;/p&gt; &lt;p&gt;And then a few years later came &lt;a href=&quot;/technologies/apache-mesos/&quot;&gt;Apache Mesos&lt;/a&gt;, the technology (along with it’s ecosystem) that we’ve been looking at this week. Mesos was born out of UC Berkeley RAD Lab and has seen rapid growth, with a commercial backer now in place in Mesosphere, and adoption by some significant customers. It’s a much more general purpose capability than YARN, with support for long running containerised applications via &lt;a href=&quot;/technologies/mesosphere-marathon/&quot;&gt;Marathon&lt;/a&gt; also positioning it as an alternative to Kubernetes and Docker Swarm. It’s resource management model is also interestingly different to YARN, with Mesos making resource offers to applications which can then accept or reject them, as opposed to YARN which makes decisions about resources on behalf of applications, meaning applications can make decisions about data locality and resource usage, but removing the ability to manage this centrally.&lt;/p&gt; &lt;p&gt;YARN also has support for long running services coming, originally via &lt;a href=&quot;/technologies/apache-slider/&quot;&gt;Apache Slider&lt;/a&gt; but with this functionality now being added directly into YARN (and work on Slider stopped), although there’s no current work on making it able to run or manager generic docker images ala Mesos / Marathon (beyond an aborted attempt by Hortonworks a few years ago to support Kubernetes on YARN). But YARN does has some interesting new capabilities for running spawned processes inside containers, something that appears to require application level support on Mesos.&lt;/p&gt; &lt;p&gt;And then there’s &lt;a href=&quot;/technologies/apache-myriad/&quot;&gt;Apache Myriad&lt;/a&gt;, which allows you to run YARN jobs over Mesos that maybe allow you to have your cake and eat it if you have a Mesos cluster (although it’s probably not quite mature yet). And Apache REEF - a library that provides an abstraction layer over YARN and Mesos, allowing applications to support both (and future technologies) via a single API.&lt;/p&gt; &lt;p&gt;It’s an evolving area, and one we’ll track. And we’ll talk more about container management, and the use of containers for running data processing jobs and managing data platforms in the not too distant future as well.&lt;/p&gt; &lt;p&gt;Right - that’s us for the week. Thanks to Jeff again for the content this week, and we’ll see you after the weekend.&lt;/p&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/blog/2017/07/21/thoughts-on-compute-cluster-management/</guid> </item> <item><title>Compute Cluster Managers</title><link>http://ondataengineering.net/tech-categories/compute-cluster-managers/</link><pubDate>Fri, 21 Jul 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;Technologies that start and manage the executor processes for distributed and transient data processing jobs, and then manage the use of resources (primarily cpu and memory) across the jobs running on the cluster. Should provide a way of packaging jobs and ensuring jobs are isolated from each other during execution, for example to allow different jobs to run in different environments against different versions of libraries. When running over a combined compute / storage cluster (like Hadoop), should also support data locaility ensuring that individual executors are running next to the data they require.&lt;/p&gt; &lt;!-- Tech Category metadata --&gt; &lt;!-- Tech Vendor metadata --&gt; &lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt; &lt;p&gt;There are two main technologies in this space:&lt;/p&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-hadoop/yarn/&quot;&gt;Apache YARN&lt;/a&gt;&lt;/td&gt; &lt;td&gt;The resource manager within the Apache Hadoop project, supporting transient jobs running on an Hadoop cluster, and with support for long running services coming.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-mesos/&quot;&gt;Apache Mesos&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Stand alone more general purpose cluster manager, with additional support for long running containerised applications ala Kerberos or Docker Swarm.&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;apache-yarn&quot;&gt;Apache YARN&lt;/h2&gt; &lt;p&gt;For more information on deploying Hadoop (and YARN), see our &lt;a href=&quot;/tech-categories/hadoop-distributions/&quot;&gt;Hadoop Distributions&lt;/a&gt; page.&lt;/p&gt; &lt;h2 id=&quot;apache-mesos&quot;&gt;Apache Mesos&lt;/h2&gt; &lt;p&gt;Apache Mesos is also available as a commercial enterprise product:&lt;/p&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/mesosphere-dcos/&quot;&gt;Mesosphere DC/OS&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Commercial distribution of Apache Mesos with additional enterprise features&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;Apache Mesos has an ecosystem of associated technologies, all of which are linked from our &lt;a href=&quot;/technologies/apache-mesos/&quot;&gt;Apache Mesos&lt;/a&gt; page.&lt;/p&gt; &lt;h2 id=&quot;other-technologies&quot;&gt;Other Technologies&lt;/h2&gt; &lt;p&gt;Other technologies of interest in this space are:&lt;/p&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;/technologies/apache-myriad/&quot;&gt;Apache Myriad&lt;/a&gt;&lt;/td&gt; &lt;td&gt;Allows execution of YARN jobs over Apache Mesos&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Apache REEF&lt;/td&gt; &lt;td&gt;A library that provides an abstraction layer over YARN and Mesos, allowing applications to support both (and future technologies) via a single API - &lt;a href=&quot;http://reef.apache.org/&quot;&gt;http://reef.apache.org/&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;storage&quot;&gt;Storage&lt;/h2&gt; &lt;p&gt;Distributed jobs running on compute clusters will require access to storage, for which is there a number of options:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;A cluster filesystem, either running over the compute cluster (e.g. Hadoop) or external to the cluster&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;/tech-categories/object-stores/&quot;&gt;Object Storage&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Simple network available storage that doesn’t provide parallel data access&lt;/li&gt; &lt;/ul&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/tech-categories/compute-cluster-managers/</guid> </item> <item><title>Mesosphere DC/OS</title><link>http://ondataengineering.net/technologies/mesosphere-dcos/</link><pubDate>Thu, 20 Jul 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;A distributed, hybrid-cloud operating system for elastic stateless micro services running in containers and stateful big data services, ensuring high datacenter utilization. At its core, Apache Mesos handles job scheduling, resource management and abstraction, high availability, infrastructure-level processes and pluggable containerizers for both Docker and native Mesos containers. Combined with Marathon, provides a container orchestration platform with support for launching, managing, scaling and networking containers. Focused on ease of use, provides an app-store-like service catalog (Universe) to install complex distributed systems including HDFS, Apache Spark, Apache Kafka, Apache Cassandra, CI/CD applications such as Jenkins, all of which have been optimised to run on Apache Mesos and a web interface for monitoring and management. Comes in two flavors; a free community edition for installation in the cloud and a commercial enterprise edition for on-premises, in the cloud, or across a hybrid environment and includes monitoring tools, support for enterprise security and compliance tools, advanced networking, and load balancing features. Offered via a subscription license, the enterprise edition also includes product support. Open sourced in April 2016 under the Apache 2.0 license, under active development led by Mesosphere with a range of contributors including Microsoft.&lt;/p&gt; &lt;!-- Tech Category metadata --&gt; &lt;h2&gt;Technology Information&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt;&lt;td&gt;Other Names&lt;/td&gt;&lt;td&gt;DC/OS&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Commercial Open Source&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Last Updated&lt;/td&gt;&lt;td&gt;July 2017 - v1.9&lt;/td&gt;&lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2&gt;Related Technologies&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt;&lt;td&gt;Uses&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;/technologies/apache-mesos/&quot;&gt;Apache Mesos&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Packages&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;/technologies/mesosphere-marathon/&quot;&gt;Mesosphere Marathon&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dcos.io/&quot;&gt;https://dcos.io/&lt;/a&gt; - product home page&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/dcos/dcos/&quot;&gt;https://github.com/dcos/dcos/&lt;/a&gt; - source code&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dcos.io/docs/&quot;&gt;https://dcos.io/docs/&lt;/a&gt; - documentation&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://mesosphere.com/blog/2016/04/19/open-source-dcos/&quot;&gt;https://mesosphere.com/blog/2016/04/19/open-source-dcos/&lt;/a&gt; - Introduction to open source DC/OS&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;news&quot;&gt;News&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://dcos.io/blog/&quot;&gt;https://dcos.io/blog/&lt;/a&gt; - blog&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://dcos.io/releases/&quot;&gt;https://dcos.io/releases/&lt;/a&gt; - details of releases&lt;/li&gt; &lt;/ul&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/technologies/mesosphere-dcos/</guid> </item> <item><title>Mesosphere</title><link>http://ondataengineering.net/tech-vendors/mesosphere/</link><pubDate>Thu, 20 Jul 2017 07:30:00 +0100</pubDate> <description> &lt;p&gt;Mesosphere is a commercial company developing the Mesosphere Datacenter Operating System (DC/OS). DC/OS is built around Apache Mesos and is itself an open source project. They are therefore extremely active in the open source space. Their business model is to sell subscription licenses based around an Enterprise version of DC/OS, provide training and support for DC/OS and partner-supported technologies. Mesosphere was founded in May 2013 by ex-engineers from Twitter and Airbnb.&lt;/p&gt; &lt;!-- Tech Category metadata --&gt; &lt;h2&gt;Vendor Technologies&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt; &lt;a href=&quot;http://ondataengineering.net/technologies/apache-mesos/&quot;&gt;Apache Mesos&lt;/a&gt; &lt;/td&gt; &lt;td&gt;Open source cluster manager for providing efficient resource utilization across a cluster of servers through resource sharing and isolation. Allows a cluster of servers to be shared across diverse cluster computing frameworks so that different distributed workloads such as container orchestration, machine learning, analytics and stateful big data technologies can be run without interfering with each other. Has the ability to dynamically allocate resources across the servers as needed and delegates control over scheduling to the frameworks through an abstraction layer called a resource offer to support a wide array of computing frameworks. Resource isolation is implemented using a universal containeriser, supporting numerous containers including native Mesos containers and Docker containers. Fault tolerance of the Mesos instance in control of the cluster is implemented using Zookeeper. Started as a research project in the UC Berkeley RAD Lab, open sourced in 2011, with a v1.0 release in July 2016, which, included the 'unified containeriser' and GPU-based scheduling. Written in C++, uses Google Protocol Buffers for messaging and serialization to allow frameworks to be written in a variety of languages including C++, Java, Python, Go, Haskell, and Scala. Under active development, open sourced under the Apache 2.0 license, hosted on the Apache git repository and mirrored on GitHub. Software startup Mesosphere sells the Datacenter Operating System, a distributed operating system, based on Apache Mesos.&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;!-- Technology metadata --&gt; &lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://mesosphere.com/&quot;&gt;https://mesosphere.com/&lt;/a&gt; - homepage&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;news&quot;&gt;News&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://mesosphere.com/blog/&quot;&gt;https://mesosphere.com/blog/&lt;/a&gt; - Mesosphere blog&lt;/li&gt; &lt;/ul&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/tech-vendors/mesosphere/</guid> </item> <item><title>Mesosphere Marathon</title><link>http://ondataengineering.net/technologies/mesosphere-marathon/</link><pubDate>Wed, 19 Jul 2017 07:45:00 +0100</pubDate> <description> &lt;p&gt;A framework for Apache Mesos and Mesosphere's Datacenter Operating System (DC/OS) to launch long-running services in a clustered environment and ensure that they continue to run in the event of a hardware or software failure. Implemented as a Mesos framework, leverages Mesos for resource allocation and isolation and provides a REST API and web interface for service definition, discovery and management. Provides constraints control to support service placement for high-available and locality, an event bus and health checking to support rolling deployments and upgrades. Provides local and external persistent storage and resurrection on the same node in the event of a failure to support stateful services (in beta). Often used as an orchestrator for other applications and services, can be run in highly-available mode by running multiple copies of the framework and using ZooKeeper to perform leader election in the event on an failure. Written in Scala, open sourced under the Apache 2.0 license, hosted on GitHub, with development led by Mesosphere who also distribute it as part of their Mesosphere's Datacenter Operating System (DC/OS) commercial offering.&lt;/p&gt; &lt;!-- Tech Category metadata --&gt; &lt;h2&gt;Technology Information&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt;&lt;td&gt;Other Names&lt;/td&gt;&lt;td&gt;Marathon&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Type&lt;/td&gt;&lt;td&gt;Commercial Open Source&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Last Updated&lt;/td&gt;&lt;td&gt;July 2017 - v1.4&lt;/td&gt;&lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2&gt;Related Technologies&lt;/h2&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt;&lt;td&gt;Uses&lt;/td&gt;&lt;td&gt;Zookeeper&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Add on to&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;/technologies/apache-mesos/&quot;&gt;Apache Mesos&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;Is packaged by&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;/technologies/mesosphere-dcos/&quot;&gt;Mesosphere DC/OS&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://mesosphere.github.io/marathon/&quot;&gt;https://mesosphere.github.io/marathon/&lt;/a&gt; - product home page&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/mesosphere/marathon/&quot;&gt;https://github.com/mesosphere/marathon/&lt;/a&gt; - source code&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://mesosphere.github.io/marathon/docs/&quot;&gt;https://mesosphere.github.io/marathon/docs/&lt;/a&gt; - documentation&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;news&quot;&gt;News&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://github.com/mesosphere/marathon/releases/&quot;&gt;https://github.com/mesosphere/marathon/releases/&lt;/a&gt; - details of releases&lt;/li&gt; &lt;/ul&gt; </description> <guid isPermaLink="true">http://ondataengineering.net/technologies/mesosphere-marathon/</guid> </item> </channel> </rss>
